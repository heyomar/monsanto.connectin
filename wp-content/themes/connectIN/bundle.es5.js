"use strict";var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol?"symbol":typeof obj;};(function(f){if((typeof exports==="undefined"?"undefined":_typeof(exports))==="object"&&typeof module!=="undefined"){module.exports=f();}else if(typeof define==="function"&&define.amd){define([],f);}else{var g;if(typeof window!=="undefined"){g=window;}else if(typeof global!=="undefined"){g=global;}else if(typeof self!=="undefined"){g=self;}else{g=this;}g.fitvids=f();}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f;}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e);},l,l.exports,e,t,n,r);}return n[o].exports;}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++){s(r[o]);}return s;}({1:[function(require,module,exports){'use strict';var selectors=['iframe[src*="player.vimeo.com"]','iframe[src*="youtube.com"]','iframe[src*="youtube-nocookie.com"]','iframe[src*="kickstarter.com"][src*="video.html"]','object'];var css='.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';module.exports=function(parentSelector,opts){parentSelector=parentSelector||'body';opts=opts||{};if(isObject(parentSelector)){opts=parentSelector;parentSelector='body';}opts.ignore=opts.ignore||'';opts.players=opts.players||'';var containers=queryAll(parentSelector);if(!hasLength(containers))return;if(!document.getElementById('fit-vids-style')){var head=document.head||document.getElementsByTagName('head')[0];head.appendChild(styles());}var custom=toSelectorArray(opts.players)||[];var ignored=toSelectorArray(opts.ignore)||[];var selector=selectors.filter(notIgnored(ignored)).concat(custom).join();if(!hasLength(selector))return;containers.forEach(function(container){var videos=queryAll(container,selector);videos.forEach(function(video){wrap(video);});});};function queryAll(el,selector){if(typeof el==='string'){selector=el;el=document;}return Array.prototype.slice.call(el.querySelectorAll(selector));}function toSelectorArray(input){if(typeof input==='string'){return input.split(',').map(trim).filter(hasLength);}else if(isArray(input)){return flatten(input.map(toSelectorArray).filter(hasLength));}return input||[];}function wrap(el){if(/fluid-width-video-wrapper/.test(el.parentNode.className))return;var widthAttr=parseInt(el.getAttribute('width'),10);var heightAttr=parseInt(el.getAttribute('height'),10);var width=!isNaN(widthAttr)?widthAttr:el.clientWidth;var height=!isNaN(heightAttr)?heightAttr:el.clientHeight;var aspect=height/width;el.removeAttribute('width');el.removeAttribute('height');var wrapper=document.createElement('div');el.parentNode.insertBefore(wrapper,el);wrapper.className='fluid-width-video-wrapper';wrapper.style.paddingTop=aspect*100+'%';wrapper.appendChild(el);}function styles(){var div=document.createElement('div');div.innerHTML='<p>x</p><style id="fit-vids-style">'+css+'</style>';return div.childNodes[1];}function notIgnored(ignored){if(ignored.length<1){return function(){return true;};}return function(selector){return ignored.indexOf(selector)===-1;};}function hasLength(input){return input.length>0;}function trim(str){return str.replace(/^\s+|\s+$/g,'');}function flatten(input){return[].concat.apply([],input);}function isObject(input){return Object.prototype.toString.call(input)==='[object Object]';}function isArray(input){return Object.prototype.toString.call(input)==='[object Array]';}},{}]},{},[1])(1);});fitvids();/*! Lity - v2.2.2 - 2016-12-14
* http://sorgalla.com/lity/
* Copyright (c) 2015-2016 Jan Sorgalla; Licensed MIT */(function(window,factory){if(typeof define==='function'&&define.amd){define(['jquery'],function($){return factory(window,$);});}else if((typeof module==="undefined"?"undefined":_typeof(module))==='object'&&_typeof(module.exports)==='object'){module.exports=factory(window,require('jquery'));}else{window.lity=factory(window,window.jQuery||window.Zepto);}})(typeof window!=="undefined"?window:undefined,function(window,$){'use strict';var document=window.document;var _win=$(window);var _deferred=$.Deferred;var _html=$('html');var _instances=[];var _attrAriaHidden='aria-hidden';var _dataAriaHidden='lity-'+_attrAriaHidden;var _focusableElementsSelector='a[href],area[href],input:not([disabled]),select:not([disabled]),textarea:not([disabled]),button:not([disabled]),iframe,object,embed,[contenteditable],[tabindex]:not([tabindex^="-"])';var _defaultOptions={handler:null,handlers:{image:imageHandler,inline:inlineHandler,youtube:youtubeHandler,vimeo:vimeoHandler,googlemaps:googlemapsHandler,facebookvideo:facebookvideoHandler,iframe:iframeHandler},template:'<div class="lity" role="dialog" aria-label="Dialog Window (Press escape to close)" tabindex="-1"><div class="lity-wrap" data-lity-close role="document"><div class="lity-loader" aria-hidden="true">Loading...</div><div class="lity-container"><div class="lity-content"></div><button class="lity-close" type="button" aria-label="Close (Press escape to close)" data-lity-close>&times;</button></div></div></div>'};var _imageRegexp=/(^data:image\/)|(\.(png|jpe?g|gif|svg|webp|bmp|ico|tiff?)(\?\S*)?$)/i;var _youtubeRegex=/(youtube(-nocookie)?\.com|youtu\.be)\/(watch\?v=|v\/|u\/|embed\/?)?([\w-]{11})(.*)?/i;var _vimeoRegex=/(vimeo(pro)?.com)\/(?:[^\d]+)?(\d+)\??(.*)?$/;var _googlemapsRegex=/((maps|www)\.)?google\.([^\/\?]+)\/?((maps\/?)?\?)(.*)/i;var _facebookvideoRegex=/(facebook\.com)\/([a-z0-9_-]*)\/videos\/([0-9]*)(.*)?$/i;var _transitionEndEvent=function(){var el=document.createElement('div');var transEndEventNames={WebkitTransition:'webkitTransitionEnd',MozTransition:'transitionend',OTransition:'oTransitionEnd otransitionend',transition:'transitionend'};for(var name in transEndEventNames){if(el.style[name]!==undefined){return transEndEventNames[name];}}return false;}();function transitionEnd(element){var deferred=_deferred();if(!_transitionEndEvent||!element.length){deferred.resolve();}else{element.one(_transitionEndEvent,deferred.resolve);setTimeout(deferred.resolve,500);}return deferred.promise();}function settings(currSettings,key,value){if(arguments.length===1){return $.extend({},currSettings);}if(typeof key==='string'){if(typeof value==='undefined'){return typeof currSettings[key]==='undefined'?null:currSettings[key];}currSettings[key]=value;}else{$.extend(currSettings,key);}return this;}function parseQueryParams(params){var pairs=decodeURI(params.split('#')[0]).split('&');var obj={},p;for(var i=0,n=pairs.length;i<n;i++){if(!pairs[i]){continue;}p=pairs[i].split('=');obj[p[0]]=p[1];}return obj;}function appendQueryParams(url,params){return url+(url.indexOf('?')>-1?'&':'?')+$.param(params);}function transferHash(originalUrl,newUrl){var pos=originalUrl.indexOf('#');if(-1===pos){return newUrl;}if(pos>0){originalUrl=originalUrl.substr(pos);}return newUrl+originalUrl;}function error(msg){return $('<span class="lity-error"/>').append(msg);}function imageHandler(target,instance){var desc=instance.opener()&&instance.opener().data('lity-desc')||'Image with no description';var img=$('<img src="'+target+'" alt="'+desc+'"/>');var deferred=_deferred();var failed=function failed(){deferred.reject(error('Failed loading image'));};img.on('load',function(){if(this.naturalWidth===0){return failed();}deferred.resolve(img);}).on('error',failed);return deferred.promise();}imageHandler.test=function(target){return _imageRegexp.test(target);};function inlineHandler(target,instance){var el,placeholder,hasHideClass;try{el=$(target);}catch(e){return false;}if(!el.length){return false;}placeholder=$('<i style="display:none !important"/>');hasHideClass=el.hasClass('lity-hide');instance.element().one('lity:remove',function(){placeholder.before(el).remove();if(hasHideClass&&!el.closest('.lity-content').length){el.addClass('lity-hide');}});return el.removeClass('lity-hide').after(placeholder);}function youtubeHandler(target){var matches=_youtubeRegex.exec(target);if(!matches){return false;}return iframeHandler(transferHash(target,appendQueryParams('https://www.youtube'+(matches[2]||'')+'.com/embed/'+matches[4],$.extend({autoplay:1},parseQueryParams(matches[5]||'')))));}function vimeoHandler(target){var matches=_vimeoRegex.exec(target);if(!matches){return false;}return iframeHandler(transferHash(target,appendQueryParams('https://player.vimeo.com/video/'+matches[3],$.extend({autoplay:1},parseQueryParams(matches[4]||'')))));}function facebookvideoHandler(target){var matches=_facebookvideoRegex.exec(target);if(!matches){return false;}if(0!==target.indexOf('http')){target='https:'+target;}return iframeHandler(transferHash(target,appendQueryParams('https://www.facebook.com/plugins/video.php?href='+target,$.extend({autoplay:1},parseQueryParams(matches[4]||'')))));}function googlemapsHandler(target){var matches=_googlemapsRegex.exec(target);if(!matches){return false;}return iframeHandler(transferHash(target,appendQueryParams('https://www.google.'+matches[3]+'/maps?'+matches[6],{output:matches[6].indexOf('layer=c')>0?'svembed':'embed'})));}function iframeHandler(target){return'<div class="lity-iframe-container"><iframe frameborder="0" allowfullscreen src="'+target+'"/></div>';}function winHeight(){return document.documentElement.clientHeight?document.documentElement.clientHeight:Math.round(_win.height());}function keydown(e){var current=currentInstance();if(!current){return;}// ESC key
if(e.keyCode===27){current.close();}// TAB key
if(e.keyCode===9){handleTabKey(e,current);}}function handleTabKey(e,instance){var focusableElements=instance.element().find(_focusableElementsSelector);var focusedIndex=focusableElements.index(document.activeElement);if(e.shiftKey&&focusedIndex<=0){focusableElements.get(focusableElements.length-1).focus();e.preventDefault();}else if(!e.shiftKey&&focusedIndex===focusableElements.length-1){focusableElements.get(0).focus();e.preventDefault();}}function resize(){$.each(_instances,function(i,instance){instance.resize();});}function registerInstance(instanceToRegister){if(1===_instances.unshift(instanceToRegister)){_html.addClass('lity-active');_win.on({resize:resize,keydown:keydown});}$('body > *').not(instanceToRegister.element()).addClass('lity-hidden').each(function(){var el=$(this);if(undefined!==el.data(_dataAriaHidden)){return;}el.data(_dataAriaHidden,el.attr(_attrAriaHidden)||null);}).attr(_attrAriaHidden,'true');}function removeInstance(instanceToRemove){var show;instanceToRemove.element().attr(_attrAriaHidden,'true');if(1===_instances.length){_html.removeClass('lity-active');_win.off({resize:resize,keydown:keydown});}_instances=$.grep(_instances,function(instance){return instanceToRemove!==instance;});if(!!_instances.length){show=_instances[0].element();}else{show=$('.lity-hidden');}show.removeClass('lity-hidden').each(function(){var el=$(this),oldAttr=el.data(_dataAriaHidden);if(!oldAttr){el.removeAttr(_attrAriaHidden);}else{el.attr(_attrAriaHidden,oldAttr);}el.removeData(_dataAriaHidden);});}function currentInstance(){if(0===_instances.length){return null;}return _instances[0];}function factory(target,instance,handlers,preferredHandler){var handler='inline',content;var currentHandlers=$.extend({},handlers);if(preferredHandler&&currentHandlers[preferredHandler]){content=currentHandlers[preferredHandler](target,instance);handler=preferredHandler;}else{// Run inline and iframe handlers after all other handlers
$.each(['inline','iframe'],function(i,name){delete currentHandlers[name];currentHandlers[name]=handlers[name];});$.each(currentHandlers,function(name,currentHandler){// Handler might be "removed" by setting callback to null
if(!currentHandler){return true;}if(currentHandler.test&&!currentHandler.test(target,instance)){return true;}content=currentHandler(target,instance);if(false!==content){handler=name;return false;}});}return{handler:handler,content:content||''};}function Lity(target,options,opener,activeElement){var self=this;var result;var isReady=false;var isClosed=false;var element;var content;options=$.extend({},_defaultOptions,options);element=$(options.template);// -- API --
self.element=function(){return element;};self.opener=function(){return opener;};self.options=$.proxy(settings,self,options);self.handlers=$.proxy(settings,self,options.handlers);self.resize=function(){if(!isReady||isClosed){return;}content.css('max-height',winHeight()+'px').trigger('lity:resize',[self]);};self.close=function(){if(!isReady||isClosed){return;}isClosed=true;removeInstance(self);var deferred=_deferred();// We return focus only if the current focus is inside this instance
if(activeElement&&(document.activeElement===element[0]||$.contains(element[0],document.activeElement))){try{activeElement.focus();}catch(e){// Ignore exceptions, eg. for SVG elements which can't be
// focused in IE11
}}content.trigger('lity:close',[self]);element.removeClass('lity-opened').addClass('lity-closed');transitionEnd(content.add(element)).always(function(){content.trigger('lity:remove',[self]);element.remove();element=undefined;deferred.resolve();});return deferred.promise();};// -- Initialization --
result=factory(target,self,options.handlers,options.handler);element.attr(_attrAriaHidden,'false').addClass('lity-loading lity-opened lity-'+result.handler).appendTo('body').focus().on('click','[data-lity-close]',function(e){if($(e.target).is('[data-lity-close]')){self.close();}}).trigger('lity:open',[self]);registerInstance(self);$.when(result.content).always(ready);function ready(result){content=$(result).css('max-height',winHeight()+'px');element.find('.lity-loader').each(function(){var loader=$(this);transitionEnd(loader).always(function(){loader.remove();});});element.removeClass('lity-loading').find('.lity-content').empty().append(content);isReady=true;content.trigger('lity:ready',[self]);}}function lity(target,options,opener){if(!target.preventDefault){opener=$(opener);}else{target.preventDefault();opener=$(this);target=opener.data('lity-target')||opener.attr('href')||opener.attr('src');}var instance=new Lity(target,$.extend({},opener.data('lity-options')||opener.data('lity'),options),opener,document.activeElement);if(!target.preventDefault){return instance;}}lity.version='2.2.2';lity.options=$.proxy(settings,lity,_defaultOptions);lity.handlers=$.proxy(settings,lity,_defaultOptions.handlers);lity.current=currentInstance;$(document).on('click.lity','[data-lity]',lity);return lity;});var mailbar="\n<div class=\"mailbar-header\">\n  <span id=\"mailbar-activate\">\n    <span class=\"show__768up\">Sign up for email updates about the ConnectIN™ Wheat Insight System.</span>\n    <span class=\"hide__768down\">Sign up for email updates</span>\n    <svg class=\"icon down\"><use xlink:href=\"#icon-down\"></use></svg>\n  </span>\n\n  </span>\n\n  <span id=\"mailbar-dismiss\" class=\"dismiss\">\n    <svg class=\"icon\">\n      <use xlink:href=\"#icon-circle-cross\"></use>\n    </svg>\n  </span>\n</div>\n<div id=\"mailbar-body\" class=\"mailbar-body\">\n    <!-- form  -->\n    <div id=\"signupform__ctn\" class=\"wFormContainer\">\n        <style type=\"text/css\"></style>\n        <div class=\"wForm\" id=\"tfa_0-WRPR\" dir=\"ltr\">\n            <div class=\"codesection\" id=\"code-tfa_0\"></div>\n            <h3 class=\"wFormTitle\" id=\"tfa_0-T\">ConnectIN Email Signup</h3>\n            <form method=\"post\" action=\"https://www.tfaforms.com/responses/processor\" class=\"hintsBelow labelsAbove ConnectIN-Email-Signup\" id=\"tfa_0\">\n                <div id=\"tfa_1-D\" class=\"oneField field-container-D     \">\n                    <label id=\"tfa_1-L\" for=\"tfa_1\" class=\"label preField reqMark\">First Name</label>\n                    <br>\n                    <div class=\"inputWrapper\">\n                        <input type=\"text\" id=\"tfa_1\" name=\"tfa_1\" value=\"\" placeholder=\"\" title=\"First Name\" class=\"required\">\n                    </div>\n                </div>\n                <div id=\"tfa_2-D\" class=\"oneField field-container-D     \">\n                    <label id=\"tfa_2-L\" for=\"tfa_2\" class=\"label preField reqMark\">Last Name</label>\n                    <br>\n                    <div class=\"inputWrapper\">\n                        <input type=\"text\" id=\"tfa_2\" name=\"tfa_2\" value=\"\" placeholder=\"\" title=\"Last Name\" class=\"required\">\n                    </div>\n                </div>\n                <div id=\"tfa_3-D\" class=\"oneField field-container-D     \">\n                    <label id=\"tfa_3-L\" for=\"tfa_3\" class=\"label preField reqMark\">Email</label>\n                    <br>\n                    <div class=\"inputWrapper\">\n                        <input type=\"text\" id=\"tfa_3\" name=\"tfa_3\" value=\"\" placeholder=\"\" title=\"Email\" class=\"validate-email required\">\n                    </div>\n                </div>\n                <div id=\"tfa_4-D\" class=\"oneField field-container-D     \">\n                    <label id=\"tfa_4-L\" for=\"tfa_4\" class=\"label preField reqMark\">I am a:</label>\n                    <br>\n                    <div class=\"inputWrapper\"><span id=\"tfa_4\" class=\"choices vertical required\"><span class=\"oneChoice\"><input type=\"checkbox\" value=\"tfa_6\" class=\"\" checked id=\"tfa_6\" name=\"tfa_6\"><label class=\"label postField\" id=\"tfa_6-L\" for=\"tfa_6\">Grower</label></span>\n                        <span\n                            class=\"oneChoice\">\n                            <input type=\"checkbox\" value=\"tfa_5\" class=\"\" id=\"tfa_5\" name=\"tfa_5\">\n                            <label class=\"label postField\" id=\"tfa_5-L\" for=\"tfa_5\">Seed Supplier</label>\n                            </span>\n                            </span>\n                    </div>\n                </div>\n                <div class=\"actions\" id=\"tfa_0-A\">\n                    <input type=\"submit\" class=\"primaryAction\" value=\"Submit\">\n                </div>\n                <div style=\"clear:both\"></div>\n                <input type=\"hidden\" value=\"433713\" name=\"tfa_dbFormId\" id=\"tfa_dbFormId\">\n                <input type=\"hidden\" value=\"\" name=\"tfa_dbResponseId\" id=\"tfa_dbResponseId\">\n                <input type=\"hidden\" value=\"a8623a69d1e6264f46562887e0ccd599\" name=\"tfa_dbControl\" id=\"tfa_dbControl\">\n                <input type=\"hidden\" value=\"7\" name=\"tfa_dbVersionId\" id=\"tfa_dbVersionId\">\n                <input type=\"hidden\" value=\"\" name=\"tfa_switchedoff\" id=\"tfa_switchedoff\">\n            </form>\n        </div>\n        </div>\n    </div>\n\n</div>\n";if($('body').hasClass('sign-up')===true||document.cookie.replace(/(?:(?:^|.*;\s*)subscribed\s*\=\s*([^;]*).*$)|^.*$/,'$1')!=='true'){if($('body').hasClass('contact-us')===true){$('#mailbar').hide();}else{$('#mailbar').html(mailbar);}}// click title or down arrow
$('#mailbar-activate').on('click touchend',function(){var vh=void 0;var $body=$('#mailbar-body');var arrowDown='<use xlink:href="#icon-down"></use>';var arrowUp='<use xlink:href="#icon-up"></use>';if($(window).width()<768){vh=$(window).height()-$('#mailbar').height();}else{vh=400;}if($body.height()===0){window.scroll(0,0);$body.animate({height:vh});$(this).children('svg').html(arrowUp);}else{$body.animate({height:0});$(this).children('svg').html(arrowDown);}$('body').toggleClass('mailbar-active');$('html').toggleClass('mailbar-active');});// click dismiss
$('#mailbar-dismiss').on('click',dismissMailbar);function dismissMailbar(){// if the menu is active and you dismiss, recalculate menu height
if($('body').hasClass('menu-active')){var menu=$('#menu-header-menu-container');var addedHeight=menu.height()+$('#mailbar').height();$('#menu-header-menu-container').css('height',addedHeight+'px');}$('#mailbar').animate({height:'0'},function(){$(this).remove();$('body').removeClass('mailbar-active');});document.cookie='subscribed=true';}$('#menu-activate').on('click',function(){var mailbar=0;if($('#mailbar-body').length){mailbar=$('#mailbar').height();}var vh=$(window).height()-$('#menu').height()-mailbar;var menu='<use xlink:href="#icon-menu"></use>';var cross='<use xlink:href="#icon-cross"></use>';if($('#menu-header-menu-container').height()===0){window.scroll(0,0);$('#menu-header-menu-container').animate({height:vh});$(this).children('svg').html(cross);}else{$('#menu-header-menu-container').animate({height:0});$(this).children('svg').html(menu);}$('body').toggleClass('menu-active');$('html').toggleClass('menu-active');});// TODO: recalc menu height on resize if in mobile widths
$(window).resize();$('.benefits__headline').on('click',function(){if($(window).width()<=768){var $body=$(this).next();var arrowDown='<use xlink:href="#icon-down"></use>';var arrowUp='<use xlink:href="#icon-up"></use>';$body.slideToggle();if($(this).hasClass('active')){$(this).children('svg').html(arrowDown);}else{$(this).children('svg').html(arrowUp);}$(this).toggleClass('active');}});// window.alert = function () {}
//  Validate Contact Us Fields
if($('body').hasClass('contact-us')){$('.primaryAction').on('click',function(e){e.preventDefault();function Valit(){var isValid=true;if($('.validate-email').val()===""){$('#contactEmail').css({"border":"1px solid red"});isValid=false;}else{$('#contactEmail').css({"border-color":"initial"});}if($('#tfa_2').val()===""){$('#contactMessage').css({"border":"1px solid red"});isValid=false;}else{$('#contactMessage').css({"border-color":"initial"});}return isValid;}var runit=Valit();var error='<span style="position:static;" class="errorFormMessage">You must complete all fields above.</span>';if(runit==true){$('#tfa_0').submit();$('.errorFormMessage').remove();}else{if($('.errorFormMessage')[0]){}else{$('#contactMessage').after(error);}}});}'use strict';if($('body').hasClass('wheat-profitability-calculator')){(function(){var dataExtract=function dataExtract(){return{certGermination:$('#cert_seed_germination').val(),certPureSeed:$('#cert_seed_pure_seed').val(),certSeedCost:$('#cert_seed_cost_per_unit').val(),savedGermination:$('#saved_seed_germination').val(),savedPureSeed:$('#saved_seed_pure_seed').val(),savedSeedCost:$('#saved_seed_cost_per_unit').val(),season:$('input[name="crop_season"]:checked').val(),targetYield:$('#crop_target_yield').val(),wheatPrice:$('#crop_wheat_price').val(),targetPlantPopulation:$('#crop_target_planting_population').val(),flatSeedingRate:$('#crop_flat_seeding_rate').val(),acresPlanted:$('#crop_acres_planted').val(),yieldImpactOverseeding:$('#crop_percent_yield_impact_overseeding').val(),yieldImpactUnderseeding:$('#crop_percent_yield_impact_underseeding').val(),impactCompareGraph:$('#compareGraph').val(),maximizeRevenueGraph:$('#revenueGraph').val()};};$('.toggleModal').on('click',function(){$('#emailData').slideDown();});$('.close').on('click',function(e){$('.thankyoumodal').removeClass('active');});$('#reset_form,#thankyou__startover').on('click',function(){window.location.reload();$(window).scrollTop(0);});$("#emailDataForm").bind("keypress",function(e){if(e.keyCode==13){return false;// ignore default event
}});$('#downloadPDF').click(function(e){e.preventDefault();$('#pdfData').val(JSON.stringify(dataExtract()));$('#pdfForm').submit();});$('#mailPDF').click(function(e){//Validate Email
function is_email(email){var emailReg=/^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;return emailReg.test(email);}var emailInput=is_email($('#recipientEmail').val());var emailError='<small class="emailError">Please enter valid email.</small';if(emailInput==false){$('#recipientEmail').css({"border-color":"red"});if($('.emailError')[0]){}else{$('#mailPDF').after(emailError);}}else{$('.emailError').remove();$('#recipientEmail').css({"border-color":"inherit"});var queryStringAdd='&recipients='+encodeURIComponent($('#recipientEmail').val())+'&sender='+encodeURIComponent('no-reply@connectinsystem.com')+'&subject='+encodeURIComponent('Your Wheat Profitability Calculator Results')+'&firstName='+'&memberBusname=';$.ajax({url:'https://pdfgen.msvc.io/api/v1/EmailLink?templateName=WestBred_ProfitCalc'+queryStringAdd,type:'POST',data:'{ "json" : '+JSON.stringify(dataExtract())+'}',beforeSend:function beforeSend(){var opts={lines:13// The number of lines to draw
,length:28// The length of each line
,width:14// The line thickness
,radius:42// The radius of the inner circle
,scale:0.15// Scales overall size of the spinner
,corners:0.3// Corner roundness (0..1)
,color:'#fff'// #rgb or #rrggbb or array of colors
,opacity:0// Opacity of the lines
,rotate:0// The rotation offset
,direction:1// 1: clockwise, -1: counterclockwise
,speed:1// Rounds per second
,trail:85// Afterglow percentage
,fps:20// Frames per second when using setTimeout() as a fallback for CSS
,zIndex:2e9// The z-index (defaults to 2000000000)
,className:'spinner'// The CSS class to assign to the spinner
,top:'-20px'// Top position relative to parent
,left:'50%'// Left position relative to parent
,shadow:false// Whether to render a shadow
,hwaccel:false// Whether to use hardware acceleration
,position:'relative'// Element positioning
};var spinner=new Spinner(opts).spin();$('#mailPDF').css('color','transparent');$('#mailPDF').after(spinner.el);}}).done(function(){$('#emailData').hide();$('#thankyoumodal').show().slideDown();console.log("success");}).fail(function(){console.log("error");}).always(function(){console.log("complete");});}});$(document).ready(function(){// Main app startup
var Utility=function(){// Get the top position of an element in the document
// From smoothScroll, https://github.com/alicelieutier/smoothScroll/blob/master/smoothscroll.js
var getTop=function getTop(element){// return value of html.getBoundingClientRect().top ... IE : 0, other browsers : -pageYOffset
if(element.nodeName==='HTML')return-window.pageYOffset;return element.getBoundingClientRect().top+window.pageYOffset;};// Get the current screen viewport width
var getViewportWidth=function getViewportWidth(){return Math.max(document.documentElement.clientWidth,window.innerWidth||0);};// Add digit separator characters to a numeric string
var addDigitSeparators=function addDigitSeparators(num){var n=num.toString();var p=n.indexOf('.');return n.replace(/\d(?=(?:\d{3})+(?:\.|$))/g,function($0,i){return p<0||i<p?$0+',':$0;});};// Return the character representation of Infinity
var getInfinityChar=function getInfinityChar(){return'∞';};// Format a number for display
var formatNumber=function formatNumber(number,decimals,showPositive){var value=parseFloat(number);if(!isNaN(value)&&isFinite(value)){if(typeof decimals!=='undefined'&&decimals!==null){// Keep a set number of decimals, even if zeroes
return(value<0?'- ':showPositive===true?'+ ':'')+addDigitSeparators(Math.abs(value).toFixed(decimals));}else{// Just truncate to a fixed number of decimals, but don't preserve trailing zeroes
return(value<0?'- ':showPositive===true?'+ ':'')+addDigitSeparators(Math.abs(parseFloat(value.toFixed(2))));}}else{return getInfinityChar();}};// Format a number as curreny for display
var formatCurrency=function formatCurrency(number,showDecimals,showPositive){var value=parseFloat(number);if(!isNaN(value)&&isFinite(value)){return(value<0?'- ':showPositive===true?'+ ':'')+'$'+addDigitSeparators(Math.abs(value).toFixed(showDecimals===true?2:0));}else{return getInfinityChar();}};// Convert a formatted number back into an actual number
var unformatNumber=function unformatNumber(value){return parseFloat(value.replace(/[^-\d\.e]/g,'').trim());};// Format a input field according to the "data-format" attribute
var formatValue=function formatValue(element){if(!element||element&&!element.value){return'';}if(typeof element.value!=='string'){return element.value;}var format=document.querySelector(element).dataset.format;switch(format){case'number':return formatNumber(unformatNumber(element.value));case'signednumber':return formatNumber(unformatNumber(element.value),null,true);case'integer':return formatNumber(unformatNumber(element.value),0);case'fixed2':return formatNumber(unformatNumber(element.value),2);case'currency':return formatCurrency(unformatNumber(element.value));}return element.value;};return{getTop:getTop,getViewportWidth:getViewportWidth,addDigitSeparators:addDigitSeparators,getInfinityChar:getInfinityChar,formatNumber:formatNumber,formatCurrency:formatCurrency,unformatNumber:unformatNumber,formatValue:formatValue};}();var SeedCalcData=function(){var SEEDS_PER_LB_MIN=9000;var SEEDS_PER_LB_MAX=18000;var SEEDS_PER_LB_STEP=500;var SeedCalcUserData=function SeedCalcUserData(certified){// Properties
this.season='winter';// spring|winter
this.percentGermination=0;this.percentPureSeed=0;this.costPerCWT=0;this.targetYieldBushelsPerAcre=0;this.wheatPricePerBushel=0;this.targetPlantPopulation=0;this.flatRateLbPerAcre=0;this.acresPlanted=0;this.underSeedingYieldImpact=0;// per 100,000 seeds per acre
this.overSeedingYieldImpact=0;// per 100,000 seeds per acre
// Other
this.isCertified=!!certified;// Methods
this.resetToDefaults=function(){if(this.isCertified){setCertifiedSeedDefaults(this);}else{setSavedSeedDefaults(this);}};// Initialize
this.resetToDefaults();};var OptimalSeedingRateImpactData=function OptimalSeedingRateImpactData(seedsPerLb){// Calculated
this.yieldAdvantageBushelsPerAcre=0;this.seedLbPerAcreRequired=0;this.seedsPerAcreRequired=0;this.costPerAcre=0;this.totalSeedCost=0;this.actualSeedingRate=0;this.seedingRateVsTarget=0;this.overUnderSeedingPotentialYieldImpact=0;this.flatRateCostPerAcre=0;this.costPerAcreDifference=0;this.totalSeedCost=0;this.totalSeedCostDifferential=0;this.potentialYieldBenefitBushelsPerAcre=0;this.optimalSeedingRateNetRevenue=0;this.netRevenueLbPerAcre=0;this.optimalSeedingRateNetRevenueBenefit=0;// Other
this.seedsPerLb=seedsPerLb;};var setCertifiedSeedDefaults=function setCertifiedSeedDefaults(userData){userData.percentGermination=0.95;userData.percentPureSeed=0.985;userData.costPerCWT=18;userData.targetYieldBushelsPerAcre=80;userData.wheatPricePerBushel=3.5;userData.targetPlantPopulation=1000000;userData.flatRateLbPerAcre=100;userData.acresPlanted=2500;userData.underSeedingYieldImpact=0.5;userData.overSeedingYieldImpact=0.5;userData.isCertified=true;};var setSavedSeedDefaults=function setSavedSeedDefaults(userData){userData.percentGermination=0.93;userData.percentPureSeed=0.95;userData.costPerCWT=7.46;userData.targetYieldBushelsPerAcre=80;userData.wheatPricePerBushel=3.5;userData.targetPlantPopulation=1000000;userData.flatRateLbPerAcre=100;userData.acresPlanted=2500;userData.underSeedingYieldImpact=0.5;userData.overSeedingYieldImpact=0.5;userData.isCertified=false;};var calculate=function calculate(data){data.seedLbPerAcreRequired=data.userData.targetPlantPopulation/(data.seedsPerLb*data.userData.percentPureSeed*data.userData.percentGermination);data.seedsPerAcreRequired=data.seedLbPerAcreRequired*data.seedsPerLb;data.costPerAcre=data.userData.costPerCWT*(data.seedLbPerAcreRequired/100);data.totalSeedCost=data.costPerAcre*data.userData.acresPlanted;data.actualSeedingRate=data.userData.flatRateLbPerAcre*data.seedsPerLb*data.userData.percentPureSeed*data.userData.percentGermination;data.seedingRateVsTarget=data.actualSeedingRate-data.userData.targetPlantPopulation;data.overUnderSeedingPotentialYieldImpact=data.seedingRateVsTarget<0?data.seedingRateVsTarget/100000*data.userData.underSeedingYieldImpact*data.userData.targetYieldBushelsPerAcre:data.seedingRateVsTarget/100000*data.userData.overSeedingYieldImpact*data.userData.targetYieldBushelsPerAcre*-1;data.flatRateCostPerAcre=data.userData.costPerCWT*(data.userData.flatRateLbPerAcre/100);data.costPerAcreDifference=data.costPerAcre-data.flatRateCostPerAcre;data.totalSeedCostFlatRate=data.flatRateCostPerAcre*data.userData.acresPlanted;data.totalSeedCostFlatRateDifferential=data.costPerAcreDifference*data.userData.acresPlanted;data.potentialYieldBenefitBushelsPerAcre=data.userData.isCertified?data.userData.season.toLowerCase()==='spring'?4.5:7.5:0;data.optimalSeedingRateNetRevenue=(data.userData.targetYieldBushelsPerAcre+data.potentialYieldBenefitBushelsPerAcre)*data.userData.wheatPricePerBushel*data.userData.acresPlanted-data.totalSeedCost;data.netRevenueLbPerAcre=(data.userData.targetYieldBushelsPerAcre+data.potentialYieldBenefitBushelsPerAcre+data.overUnderSeedingPotentialYieldImpact)*data.userData.wheatPricePerBushel*data.userData.acresPlanted-data.totalSeedCost;data.optimalSeedingRateNetRevenueBenefit=data.optimalSeedingRateNetRevenue-data.netRevenueLbPerAcre;};var getDataSeries=function getDataSeries(userData){var series=[];for(var seedsPerLb=SEEDS_PER_LB_MIN;seedsPerLb<=SEEDS_PER_LB_MAX;seedsPerLb+=SEEDS_PER_LB_STEP){var dataItem=new OptimalSeedingRateImpactData(seedsPerLb);// Merge in the userData properties
dataItem.userData={};for(var prop in userData){if(userData.hasOwnProperty(prop)&&typeof userData[prop]!=='function'){dataItem.userData[prop]=userData[prop];}}calculate(dataItem);series.push(dataItem);}return series;};var getSeriesColumnData=function getSeriesColumnData(series,column){var data=[];for(var i=0;series[i];i++){data.push(series[i][column]);}return data;};return{SeedCalcUserData:SeedCalcUserData,getDataSeries:getDataSeries,getSeriesColumnData:getSeriesColumnData};}();var SeedCalc=function(){// CONSTANTS
var CHART_MOBILE_SMALL_MAX_WIDTH=400;// max width for small devices
var CHART_MOBILE_SMALL_MAX_HEIGHT=267;// max height for small devices
var CHART_MOBILE_MAX_WIDTH=600;// max width for mobile devices
var CHART_MOBILE_MAX_HEIGHT=300;// max height for mobile devices
var CHART_MAX_WIDTH=600;var CHART_MAX_HEIGHT=300;var COLOR_DARK_RED='#5293AB';var COLOR_LIGHT_RED='#72b1c8';var COLOR_DARK_BLUE='#373836';var COLOR_LIGHT_BLUE='#646560';// PROPERTIES
var certifiedSeedData=new SeedCalcData.SeedCalcUserData(true);var savedSeedData=new SeedCalcData.SeedCalcUserData();// METHODS
var isMobileSmall=function isMobileSmall(){return Utility.getViewportWidth()<CHART_MOBILE_SMALL_MAX_WIDTH;};var isMobile=function isMobile(){return Utility.getViewportWidth()<CHART_MOBILE_MAX_WIDTH;};var calculate=function calculate(){var form=document.getElementById('seed_calc_form');form.classList.add('calculated');// Get form field data
updateUserDataFromForm();// Scroll to first graph (set a delay to allow the sections to become visible)
// setTimeout(function() {
// 	var headerBar = document.querySelector('.c-site-nav-wrapper-header'),
// 		headerBarFixed = window.getComputedStyle(headerBar).position === 'fixed',
// 		offset = headerBarFixed ? -headerBar.clientHeight : 0,
// 		top = Utility.getTop(document.querySelector('.calc-section')) + offset
// 	smoothScroll(top)
// }, 50)
// Re-render the graphs
var certifiedSeedDataSeries=SeedCalcData.getDataSeries(certifiedSeedData);var savedSeedDataSeries=SeedCalcData.getDataSeries(savedSeedData);updateGraphs(certifiedSeedDataSeries,savedSeedDataSeries);// Set the Calculate button text
var btn=document.getElementById('calculate');if(btn.textContent==='Calculate'){btn.textContent='Re-Calculate';}};var updateUserDataFromForm=function updateUserDataFromForm(){var form=document.getElementById('seed_calc_form');certifiedSeedData.percentGermination=parseFloat(form['cert_seed_germination'].value)/100;certifiedSeedData.percentPureSeed=parseFloat(form['cert_seed_pure_seed'].value)/100;certifiedSeedData.costPerCWT=parseFloat(form['cert_seed_cost_per_unit'].value);savedSeedData.percentGermination=parseFloat(form['saved_seed_germination'].value)/100;savedSeedData.percentPureSeed=parseFloat(form['saved_seed_pure_seed'].value)/100;savedSeedData.costPerCWT=parseFloat(form['saved_seed_cost_per_unit'].value);// These fields have the same values in both datasets
var seasons=form['crop_season'];for(var i=0;i<seasons.length;i++){if(seasons[i].checked)certifiedSeedData.season=savedSeedData.season=seasons[i].value;break;}// certifiedSeedData.season = savedSeedData.season = form['crop_season'].value
certifiedSeedData.targetYieldBushelsPerAcre=savedSeedData.targetYieldBushelsPerAcre=parseFloat(form['crop_target_yield'].value);certifiedSeedData.wheatPricePerBushel=savedSeedData.wheatPricePerBushel=parseFloat(form['crop_wheat_price'].value);certifiedSeedData.targetPlantPopulation=savedSeedData.targetPlantPopulation=parseFloat(form['crop_target_planting_population'].value);certifiedSeedData.flatRateLbPerAcre=savedSeedData.flatRateLbPerAcre=parseFloat(form['crop_flat_seeding_rate'].value);certifiedSeedData.acresPlanted=savedSeedData.acresPlanted=parseFloat(form['crop_acres_planted'].value);certifiedSeedData.overSeedingYieldImpact=savedSeedData.overSeedingYieldImpact=parseFloat(form['crop_percent_yield_impact_overseeding'].value)/100;certifiedSeedData.underSeedingYieldImpact=savedSeedData.underSeedingYieldImpact=parseFloat(form['crop_percent_yield_impact_underseeding'].value)/100;};var updateFormFromUserData=function updateFormFromUserData(){var form=document.getElementById('seed_calc_form');form['cert_seed_germination'].value=certifiedSeedData.percentGermination*100;form['cert_seed_pure_seed'].value=certifiedSeedData.percentPureSeed*100;form['cert_seed_cost_per_unit'].value=certifiedSeedData.costPerCWT;form['saved_seed_germination'].value=savedSeedData.percentGermination*100;form['saved_seed_pure_seed'].value=savedSeedData.percentPureSeed*100;form['saved_seed_cost_per_unit'].value=savedSeedData.costPerCWT;// These fields have the same values in both datasets, so just use the first one
// form['crop_season'].value = certifiedSeedData.season // broken in Safari
if(certifiedSeedData.season==='winter'){form['crop_season'][0].checked=true;}else{form['crop_season'][1].checked=true;}form['crop_target_yield'].value=certifiedSeedData.targetYieldBushelsPerAcre;form['crop_wheat_price'].value=certifiedSeedData.wheatPricePerBushel;form['crop_target_planting_population'].value=certifiedSeedData.targetPlantPopulation;form['crop_flat_seeding_rate'].value=certifiedSeedData.flatRateLbPerAcre;form['crop_acres_planted'].value=certifiedSeedData.acresPlanted;form['crop_percent_yield_impact_overseeding'].value=certifiedSeedData.overSeedingYieldImpact;form['crop_percent_yield_impact_underseeding'].value=certifiedSeedData.underSeedingYieldImpact;};var showResetLink=function showResetLink(){// Make sure the reset link is visible
var resetLink=document.getElementById('reset_form');resetLink.classList.remove('invisible');};var hideResetLink=function hideResetLink(){// Make sure the reset link is visible
var resetLink=document.getElementById('reset_form');resetLink.classList.add('invisible');};var resetInputs=function resetInputs(){// Reset the data values to defaults
certifiedSeedData.resetToDefaults();savedSeedData.resetToDefaults();// Update form field values
updateFormFromUserData();// Hide the reset link again
hideResetLink();};var getChartCanvasHtml=function getChartCanvasHtml(id){var viewportWidth=Utility.getViewportWidth();var canvasSize={width:isMobile()?viewportWidth:CHART_MAX_WIDTH,height:isMobileSmall()?CHART_MOBILE_SMALL_MAX_HEIGHT:isMobile()?CHART_MOBILE_MAX_HEIGHT:CHART_MAX_HEIGHT};var html='<canvas id="'+id+'" class="graph block-center" width="'+canvasSize.width+'" height="'+canvasSize.height+'"></canvas>';return html;};var setChartDefaults=function setChartDefaults(animate){// Global chart config
Chart.defaults.global.defaultFontFamily='"Gotham SSm A", "Gotham SSm B", Lucida Grande, "Lucida Grande", Lucida Sans Unicode, "Lucida Sans Unicode", Lucida Sans, "Lucida Sans", Geneva, Verdana, Helvetica, Arial, sans-serif';Chart.defaults.global.defaultFontSize=16;Chart.defaults.global.maintainAspectRatio=false;Chart.defaults.global.elements.line.borderWidth=2;Chart.defaults.global.elements.line.fill=false;Chart.defaults.global.elements.point.radius=5;Chart.defaults.global.elements.point.borderWidth=2;Chart.defaults.global.animation.duration=animate===false?0:1000;Chart.defaults.global.legend.display=false;Chart.defaults.global.events=undefined;// ignore mouse/touch events
// special settings for smaller screen sizes
if(isMobileSmall()){Chart.defaults.global.defaultFontSize=11;Chart.defaults.global.elements.point.radius=2;}else if(isMobile()){Chart.defaults.global.defaultFontSize=12;Chart.defaults.global.elements.point.radius=4;}};var updateGraphCompareImpact=function updateGraphCompareImpact(certifiedSeedDataSeries,savedSeedDataSeries){// Set up graph canvas
var chartId='graph_compare_impact';var section=document.getElementById(chartId+'_section');var wrapper=document.getElementById(chartId+'_wrapper');var legend=document.getElementById(chartId+'_legend');var canvas=getChartCanvasHtml(chartId);var mobile=isMobile();var mobileSmall=isMobileSmall();// Remove the 'hidden' CSS class
section.className=section.className.replace(/\s*\bhidden\b/g,'');// destroy and recreate the canvas
if(wrapper.hasChildNodes())wrapper.removeChild(wrapper.childNodes[0]);wrapper.innerHTML=canvas;// Get the x-axis labels
var xLabels=[];for(var i=0;certifiedSeedDataSeries[i];i++){xLabels.push(certifiedSeedDataSeries[i].seedsPerLb.toString());}// Configure and render the chart
var ctx=document.getElementById(chartId);var chart=new Chart(ctx,{type:'line',data:{labels:xLabels,datasets:[{label:'Certified Seed Net Revenue by Optimal Seeding Rate ($)',data:SeedCalcData.getSeriesColumnData(certifiedSeedDataSeries,'optimalSeedingRateNetRevenue'),backgroundColor:COLOR_DARK_RED,borderColor:COLOR_DARK_RED,pointBackgroundColor:COLOR_DARK_RED,pointBorderColor:COLOR_DARK_RED,pointStyle:'circle',legendIconImage:'/wp-content/themes/connectIN/assets/images/icon__circle-line-blue-solid.png'// non-api property
},{label:'Certified Seed Net Revenue by Lbs/A ($)',data:SeedCalcData.getSeriesColumnData(certifiedSeedDataSeries,'netRevenueLbPerAcre'),backgroundColor:COLOR_LIGHT_RED,borderColor:COLOR_LIGHT_RED,pointBackgroundColor:'#ffffff',pointBorderColor:COLOR_LIGHT_RED,pointStyle:'circle',legendIconImage:'/wp-content/themes/connectIN/assets/images/icon__circle-line-blue.png'// non-api property
},{label:'Saved Seed Net Revenue by Optimal Seeding Rate ($)',data:SeedCalcData.getSeriesColumnData(savedSeedDataSeries,'optimalSeedingRateNetRevenue'),backgroundColor:COLOR_DARK_BLUE,borderColor:COLOR_DARK_BLUE,pointBackgroundColor:COLOR_DARK_BLUE,pointBorderColor:COLOR_DARK_BLUE,pointRadius:Chart.defaults.global.elements.point.radius+1,pointStyle:'rect',legendIconImage:'/wp-content/themes/connectIN/assets/images/icon__square-line-dark-solid.png'// non-api property
},{label:'Saved Seed Net Revenue by Lbs/A ($)',data:SeedCalcData.getSeriesColumnData(savedSeedDataSeries,'netRevenueLbPerAcre'),backgroundColor:COLOR_LIGHT_BLUE,borderColor:COLOR_LIGHT_BLUE,pointBackgroundColor:'#ffffff',pointBorderColor:COLOR_LIGHT_BLUE,pointRadius:Chart.defaults.global.elements.point.radius+1,pointStyle:'rect',legendIconImage:'/wp-content/themes/connectIN/assets/images/icon__square-line-dark.png'// non-api property
}]},options:{scales:{xAxes:[{position:'bottom',scaleLabel:{display:true,labelString:'Seeds/Lb',fontStyle:'bold'},ticks:{callback:function callback(value,index,values){return index%2===0?Utility.addDigitSeparators(value):'';}}}],yAxes:[{scaleLabel:{display:true,labelString:'Net Revenue ($)',fontStyle:'bold'},ticks:{callback:function callback(value,index,values){return Utility.formatCurrency(value,false);}}}]}}});setTimeout(function(){$('#compareGraph').val(chart.toBase64Image());},1500);// Update legend
legend.classList.add('calc-chart-type-'+chart.config.type);var legendHtml='<div>';for(var i=0,item;typeof(item=chart.config.data.datasets[i])!=='undefined';i++){legendHtml+='<div><img class="calc-legend-icon" src="'+item.legendIconImage+'" alt=""> <span class="calc-legend-label">'+item.label+'</span></div>';}legendHtml+='</div>';legend.innerHTML=legendHtml;};var updateGraphMaximizeRevenue=function updateGraphMaximizeRevenue(certifiedSeedDataSeries,savedSeedDataSeries){// Reset some global chart defaults
Chart.defaults.global.maintainAspectRatio=true;// Set up graph canvas
var chartId='graph_maximize_revenue';var section=document.getElementById(chartId+'_section');var wrapper=document.getElementById(chartId+'_wrapper');var legend=document.getElementById(chartId+'_legend');var canvas=getChartCanvasHtml(chartId);// Remove the 'hidden' CSS class
section.className=section.className.replace(/\s*\bhidden\b/g,'');// destroy and recreate the canvas
if(wrapper.hasChildNodes())wrapper.removeChild(wrapper.childNodes[0]);wrapper.innerHTML=canvas;// Configure and render the chart
var ctx=document.getElementById(chartId);var chart=new Chart(ctx,{type:'bar',data:{labels:[],datasets:[{label:'Certified Seed Net Revenue by Optimal Seeding Rate ($)',data:[certifiedSeedDataSeries[certifiedSeedDataSeries.length-1].optimalSeedingRateNetRevenue],backgroundColor:COLOR_LIGHT_RED,borderColor:COLOR_LIGHT_RED},{label:'Saved Seed Net Revenue by Lbs/A ($)',data:[savedSeedDataSeries[savedSeedDataSeries.length-1].netRevenueLbPerAcre],backgroundColor:COLOR_LIGHT_BLUE,borderColor:COLOR_LIGHT_BLUE}]},options:{maintainAspectRatio:true,scales:{yAxes:[{scaleLabel:{display:true,labelString:'Net Revenue ($)',fontStyle:'bold'},ticks:{callback:function callback(value,index,values){return Utility.formatCurrency(value,false);}}}]}}});setTimeout(function(){$('#revenueGraph').val(chart.toBase64Image());},1500);// Update legend
legend.classList.add('calc-chart-type-'+chart.config.type);var legendHtml='<div>';for(var i=0,item;typeof(item=chart.config.data.datasets[i])!=='undefined';i++){legendHtml+='<div><span class="calc-legend-icon" style="background-color:'+item.backgroundColor+'"></span> <span class="calc-legend-label">'+item.label+'</span></div>';}legendHtml+='</div>';legend.innerHTML=legendHtml;};var updateGraphs=function updateGraphs(certifiedSeedDataSeries,savedSeedDataSeries,animate){setChartDefaults(animate);updateGraphCompareImpact(certifiedSeedDataSeries,savedSeedDataSeries);updateGraphMaximizeRevenue(certifiedSeedDataSeries,savedSeedDataSeries);};// EVENTS
var onCalculate=function onCalculate(event){event.preventDefault();function validateForm(){var isValid=true;$('.calc-field').each(function(){if($(this).val()===''){$(this).css({"border-color":"red"});isValid=false;console.log(isValid);}else{$(this).css({"border-color":"#66665c"});}});return isValid;}$(document).ready(function(){var go=validateForm();var errorFormMessage='<span class="errorFormMessage">You must complete all fields above to calculate.</span>';if(go==true){console.log('it is valid');$('.errorFormMessage').remove();$('#graph_compare_impact_section , #graph_maximize_revenue_section').slideDown();$('.actionData').show().slideDown();calculate();}else if(go==false){console.log('it is not valid');if($('.errorFormMessage')[0]){}else{$('#yieldImpactForUnderseeding').after(errorFormMessage);}}});};var onFormInputChange=function onFormInputChange(event){event.preventDefault();// Show the 'reset form' link when deviating from the defaults
showResetLink();};var onResetForm=function onResetForm(event){event.preventDefault();// Reset the data and form values
resetInputs();};var onEmailData=function onEmailData(event){event.preventDefault();// NOTE: The generated PDF will have the data that is currently represented in the charts. If the user has changed form field values, but not clicked "Calculate", then these are not reflected in the output.
// TODO: Show email fields for user input. Submitting this form will execute the emailData() method.
console.info('Email PDF');};var onWindowResize=function onWindowResize(event){// Only redraw the graphs if they have been calculated at least once already
var form=document.getElementById('seed_calc_form');if(form.classList.contains('calculated')){// Re-render the graphs
var certifiedSeedDataSeries=SeedCalcData.getDataSeries(certifiedSeedData);var savedSeedDataSeries=SeedCalcData.getDataSeries(savedSeedData);updateGraphs(certifiedSeedDataSeries,savedSeedDataSeries,false);}};var onDownloadPdf=function onDownloadPdf(event){event.preventDefault();// NOTE: The generated PDF will have the data that is currently represented in the charts. If the user has changed form field values, but not clicked "Calculate", then these are not reflected in the output.
// TODO: Triggering this handler will execute the downloadPdf() method
console.info('Download PDF');};var wireEvents=function wireEvents(){var formElements=$('#seed_calc_form input, #seed_calc_form textarea, #seed_calc_form select');for(var i=0;i<formElements.length;i++){var el=formElements[i];el.addEventListener('change',onFormInputChange);}var calculateBtn=document.getElementById('calculate');calculateBtn.addEventListener('click',onCalculate);// Add trigger to reset to the default values
var resetFormLink=document.getElementById('reset_form');resetFormLink.addEventListener('click',onResetForm);// Add trigger to email the results as a PDF
//var emailDataBtn = document.getElementById('email_data')
//emailDataBtn.addEventListener('click', onEmailData)
// Add trigger to download the results as a PDF
//var downloadPdf = document.getElementById('download_pdf')
//downloadPdf.addEventListener('click', onDownloadPdf)
window.addEventListener('resize',onWindowResize);};var init=function init(){// Initialize user form inputs with default data
updateFormFromUserData();// Wire up interactive events
wireEvents();};return{init:init};}();SeedCalc.init();});})();}if($('body').hasClass('find-seed-supplier')){(function(){var changeState=function changeState(){if($('#results').hasClass('hidden')){$('#results').removeClass('hidden');}var selectedstate=$('#stateselect option:selected').val();$('.supplier').hide();$('.'+selectedstate).show();if(!$('.'+selectedstate)[0]){if($('#stateselect option:selected').text()==='Select a state'){$('#results').hide();}else{$('#results').show();$('.failure__nosuppliers').show();var stateChosen=$('#stateselect option:selected').text();$('.failureSpan').text(stateChosen||"your state");// $('.rep__ctn').hide()
}}else{$('.failure__nosuppliers').hide();// $('.rep__ctn').show()
}};var success=function success(position){console.log(position.coords.latitude);var GEOCODING='https://maps.googleapis.com/maps/api/geocode/json?latlng='+position.coords.latitude+','+position.coords.longitude+'&key=AIzaSyAIapQbBrBcIFTuIlMxbXbMty3dT7R1b2k';$.getJSON(GEOCODING).done(function(location){var thestate=location.results[6].address_components[0].short_name;$('#stateselect').val(thestate);changeState();});};var error=function error(err){console.log(err);};$('#stateselect').change(function(){changeState();});navigator.geolocation.getCurrentPosition(success,error);})();}/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.6.0
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 *//* global window, document, define, jQuery, setInterval, clearInterval */(function(factory){'use strict';if(typeof define==='function'&&define.amd){define(['jquery'],factory);}else if(typeof exports!=='undefined'){module.exports=factory(require('jquery'));}else{factory(jQuery);}})(function($){'use strict';var Slick=window.Slick||{};Slick=function(){var instanceUid=0;function Slick(element,settings){var _=this,dataSettings;_.defaults={accessibility:true,adaptiveHeight:false,appendArrows:$(element),appendDots:$(element),arrows:true,asNavFor:null,prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',autoplay:false,autoplaySpeed:3000,centerMode:false,centerPadding:'50px',cssEase:'ease',customPaging:function customPaging(slider,i){return $('<button type="button" data-role="none" role="button" tabindex="0" />').text(i+1);},dots:false,dotsClass:'slick-dots',draggable:true,easing:'linear',edgeFriction:0.35,fade:false,focusOnSelect:false,infinite:true,initialSlide:0,lazyLoad:'ondemand',mobileFirst:false,pauseOnHover:true,pauseOnFocus:true,pauseOnDotsHover:false,respondTo:'window',responsive:null,rows:1,rtl:false,slide:'',slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:true,swipeToSlide:false,touchMove:true,touchThreshold:5,useCSS:true,useTransform:true,variableWidth:false,vertical:false,verticalSwiping:false,waitForAnimate:true,zIndex:1000};_.initials={animating:false,dragging:false,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:false,slideOffset:0,swipeLeft:null,$list:null,touchObject:{},transformsEnabled:false,unslicked:false};$.extend(_,_.initials);_.activeBreakpoint=null;_.animType=null;_.animProp=null;_.breakpoints=[];_.breakpointSettings=[];_.cssTransitions=false;_.focussed=false;_.interrupted=false;_.hidden='hidden';_.paused=true;_.positionProp=null;_.respondTo=null;_.rowCount=1;_.shouldClick=true;_.$slider=$(element);_.$slidesCache=null;_.transformType=null;_.transitionType=null;_.visibilityChange='visibilitychange';_.windowWidth=0;_.windowTimer=null;dataSettings=$(element).data('slick')||{};_.options=$.extend({},_.defaults,settings,dataSettings);_.currentSlide=_.options.initialSlide;_.originalSettings=_.options;if(typeof document.mozHidden!=='undefined'){_.hidden='mozHidden';_.visibilityChange='mozvisibilitychange';}else if(typeof document.webkitHidden!=='undefined'){_.hidden='webkitHidden';_.visibilityChange='webkitvisibilitychange';}_.autoPlay=$.proxy(_.autoPlay,_);_.autoPlayClear=$.proxy(_.autoPlayClear,_);_.autoPlayIterator=$.proxy(_.autoPlayIterator,_);_.changeSlide=$.proxy(_.changeSlide,_);_.clickHandler=$.proxy(_.clickHandler,_);_.selectHandler=$.proxy(_.selectHandler,_);_.setPosition=$.proxy(_.setPosition,_);_.swipeHandler=$.proxy(_.swipeHandler,_);_.dragHandler=$.proxy(_.dragHandler,_);_.keyHandler=$.proxy(_.keyHandler,_);_.instanceUid=instanceUid++;// A simple way to check for HTML strings
// Strict HTML recognition (must start with <)
// Extracted from jQuery v1.11 source
_.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/;_.registerBreakpoints();_.init(true);}return Slick;}();Slick.prototype.activateADA=function(){var _=this;_.$slideTrack.find('.slick-active').attr({'aria-hidden':'false'}).find('a, input, button, select').attr({'tabindex':'0'});};Slick.prototype.addSlide=Slick.prototype.slickAdd=function(markup,index,addBefore){var _=this;if(typeof index==='boolean'){addBefore=index;index=null;}else if(index<0||index>=_.slideCount){return false;}_.unload();if(typeof index==='number'){if(index===0&&_.$slides.length===0){$(markup).appendTo(_.$slideTrack);}else if(addBefore){$(markup).insertBefore(_.$slides.eq(index));}else{$(markup).insertAfter(_.$slides.eq(index));}}else{if(addBefore===true){$(markup).prependTo(_.$slideTrack);}else{$(markup).appendTo(_.$slideTrack);}}_.$slides=_.$slideTrack.children(this.options.slide);_.$slideTrack.children(this.options.slide).detach();_.$slideTrack.append(_.$slides);_.$slides.each(function(index,element){$(element).attr('data-slick-index',index);});_.$slidesCache=_.$slides;_.reinit();};Slick.prototype.animateHeight=function(){var _=this;if(_.options.slidesToShow===1&&_.options.adaptiveHeight===true&&_.options.vertical===false){var targetHeight=_.$slides.eq(_.currentSlide).outerHeight(true);_.$list.animate({height:targetHeight},_.options.speed);}};Slick.prototype.animateSlide=function(targetLeft,callback){var animProps={},_=this;_.animateHeight();if(_.options.rtl===true&&_.options.vertical===false){targetLeft=-targetLeft;}if(_.transformsEnabled===false){if(_.options.vertical===false){_.$slideTrack.animate({left:targetLeft},_.options.speed,_.options.easing,callback);}else{_.$slideTrack.animate({top:targetLeft},_.options.speed,_.options.easing,callback);}}else{if(_.cssTransitions===false){if(_.options.rtl===true){_.currentLeft=-_.currentLeft;}$({animStart:_.currentLeft}).animate({animStart:targetLeft},{duration:_.options.speed,easing:_.options.easing,step:function step(now){now=Math.ceil(now);if(_.options.vertical===false){animProps[_.animType]='translate('+now+'px, 0px)';_.$slideTrack.css(animProps);}else{animProps[_.animType]='translate(0px,'+now+'px)';_.$slideTrack.css(animProps);}},complete:function complete(){if(callback){callback.call();}}});}else{_.applyTransition();targetLeft=Math.ceil(targetLeft);if(_.options.vertical===false){animProps[_.animType]='translate3d('+targetLeft+'px, 0px, 0px)';}else{animProps[_.animType]='translate3d(0px,'+targetLeft+'px, 0px)';}_.$slideTrack.css(animProps);if(callback){setTimeout(function(){_.disableTransition();callback.call();},_.options.speed);}}}};Slick.prototype.getNavTarget=function(){var _=this,asNavFor=_.options.asNavFor;if(asNavFor&&asNavFor!==null){asNavFor=$(asNavFor).not(_.$slider);}return asNavFor;};Slick.prototype.asNavFor=function(index){var _=this,asNavFor=_.getNavTarget();if(asNavFor!==null&&(typeof asNavFor==="undefined"?"undefined":_typeof(asNavFor))==='object'){asNavFor.each(function(){var target=$(this).slick('getSlick');if(!target.unslicked){target.slideHandler(index,true);}});}};Slick.prototype.applyTransition=function(slide){var _=this,transition={};if(_.options.fade===false){transition[_.transitionType]=_.transformType+' '+_.options.speed+'ms '+_.options.cssEase;}else{transition[_.transitionType]='opacity '+_.options.speed+'ms '+_.options.cssEase;}if(_.options.fade===false){_.$slideTrack.css(transition);}else{_.$slides.eq(slide).css(transition);}};Slick.prototype.autoPlay=function(){var _=this;_.autoPlayClear();if(_.slideCount>_.options.slidesToShow){_.autoPlayTimer=setInterval(_.autoPlayIterator,_.options.autoplaySpeed);}};Slick.prototype.autoPlayClear=function(){var _=this;if(_.autoPlayTimer){clearInterval(_.autoPlayTimer);}};Slick.prototype.autoPlayIterator=function(){var _=this,slideTo=_.currentSlide+_.options.slidesToScroll;if(!_.paused&&!_.interrupted&&!_.focussed){if(_.options.infinite===false){if(_.direction===1&&_.currentSlide+1===_.slideCount-1){_.direction=0;}else if(_.direction===0){slideTo=_.currentSlide-_.options.slidesToScroll;if(_.currentSlide-1===0){_.direction=1;}}}_.slideHandler(slideTo);}};Slick.prototype.buildArrows=function(){var _=this;if(_.options.arrows===true){_.$prevArrow=$(_.options.prevArrow).addClass('slick-arrow');_.$nextArrow=$(_.options.nextArrow).addClass('slick-arrow');if(_.slideCount>_.options.slidesToShow){_.$prevArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');_.$nextArrow.removeClass('slick-hidden').removeAttr('aria-hidden tabindex');if(_.htmlExpr.test(_.options.prevArrow)){_.$prevArrow.prependTo(_.options.appendArrows);}if(_.htmlExpr.test(_.options.nextArrow)){_.$nextArrow.appendTo(_.options.appendArrows);}if(_.options.infinite!==true){_.$prevArrow.addClass('slick-disabled').attr('aria-disabled','true');}}else{_.$prevArrow.add(_.$nextArrow).addClass('slick-hidden').attr({'aria-disabled':'true','tabindex':'-1'});}}};Slick.prototype.buildDots=function(){var _=this,i,dot;if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){_.$slider.addClass('slick-dotted');dot=$('<ul />').addClass(_.options.dotsClass);for(i=0;i<=_.getDotCount();i+=1){dot.append($('<li />').append(_.options.customPaging.call(this,_,i)));}_.$dots=dot.appendTo(_.options.appendDots);_.$dots.find('li').first().addClass('slick-active').attr('aria-hidden','false');}};Slick.prototype.buildOut=function(){var _=this;_.$slides=_.$slider.children(_.options.slide+':not(.slick-cloned)').addClass('slick-slide');_.slideCount=_.$slides.length;_.$slides.each(function(index,element){$(element).attr('data-slick-index',index).data('originalStyling',$(element).attr('style')||'');});_.$slider.addClass('slick-slider');_.$slideTrack=_.slideCount===0?$('<div class="slick-track"/>').appendTo(_.$slider):_.$slides.wrapAll('<div class="slick-track"/>').parent();_.$list=_.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent();_.$slideTrack.css('opacity',0);if(_.options.centerMode===true||_.options.swipeToSlide===true){_.options.slidesToScroll=1;}$('img[data-lazy]',_.$slider).not('[src]').addClass('slick-loading');_.setupInfinite();_.buildArrows();_.buildDots();_.updateDots();_.setSlideClasses(typeof _.currentSlide==='number'?_.currentSlide:0);if(_.options.draggable===true){_.$list.addClass('draggable');}};Slick.prototype.buildRows=function(){var _=this,a,b,c,newSlides,numOfSlides,originalSlides,slidesPerSection;newSlides=document.createDocumentFragment();originalSlides=_.$slider.children();if(_.options.rows>1){slidesPerSection=_.options.slidesPerRow*_.options.rows;numOfSlides=Math.ceil(originalSlides.length/slidesPerSection);for(a=0;a<numOfSlides;a++){var slide=document.createElement('div');for(b=0;b<_.options.rows;b++){var row=document.createElement('div');for(c=0;c<_.options.slidesPerRow;c++){var target=a*slidesPerSection+(b*_.options.slidesPerRow+c);if(originalSlides.get(target)){row.appendChild(originalSlides.get(target));}}slide.appendChild(row);}newSlides.appendChild(slide);}_.$slider.empty().append(newSlides);_.$slider.children().children().children().css({'width':100/_.options.slidesPerRow+'%','display':'inline-block'});}};Slick.prototype.checkResponsive=function(initial,forceUpdate){var _=this,breakpoint,targetBreakpoint,respondToWidth,triggerBreakpoint=false;var sliderWidth=_.$slider.width();var windowWidth=window.innerWidth||$(window).width();if(_.respondTo==='window'){respondToWidth=windowWidth;}else if(_.respondTo==='slider'){respondToWidth=sliderWidth;}else if(_.respondTo==='min'){respondToWidth=Math.min(windowWidth,sliderWidth);}if(_.options.responsive&&_.options.responsive.length&&_.options.responsive!==null){targetBreakpoint=null;for(breakpoint in _.breakpoints){if(_.breakpoints.hasOwnProperty(breakpoint)){if(_.originalSettings.mobileFirst===false){if(respondToWidth<_.breakpoints[breakpoint]){targetBreakpoint=_.breakpoints[breakpoint];}}else{if(respondToWidth>_.breakpoints[breakpoint]){targetBreakpoint=_.breakpoints[breakpoint];}}}}if(targetBreakpoint!==null){if(_.activeBreakpoint!==null){if(targetBreakpoint!==_.activeBreakpoint||forceUpdate){_.activeBreakpoint=targetBreakpoint;if(_.breakpointSettings[targetBreakpoint]==='unslick'){_.unslick(targetBreakpoint);}else{_.options=$.extend({},_.originalSettings,_.breakpointSettings[targetBreakpoint]);if(initial===true){_.currentSlide=_.options.initialSlide;}_.refresh(initial);}triggerBreakpoint=targetBreakpoint;}}else{_.activeBreakpoint=targetBreakpoint;if(_.breakpointSettings[targetBreakpoint]==='unslick'){_.unslick(targetBreakpoint);}else{_.options=$.extend({},_.originalSettings,_.breakpointSettings[targetBreakpoint]);if(initial===true){_.currentSlide=_.options.initialSlide;}_.refresh(initial);}triggerBreakpoint=targetBreakpoint;}}else{if(_.activeBreakpoint!==null){_.activeBreakpoint=null;_.options=_.originalSettings;if(initial===true){_.currentSlide=_.options.initialSlide;}_.refresh(initial);triggerBreakpoint=targetBreakpoint;}}// only trigger breakpoints during an actual break. not on initialize.
if(!initial&&triggerBreakpoint!==false){_.$slider.trigger('breakpoint',[_,triggerBreakpoint]);}}};Slick.prototype.changeSlide=function(event,dontAnimate){var _=this,$target=$(event.currentTarget),indexOffset,slideOffset,unevenOffset;// If target is a link, prevent default action.
if($target.is('a')){event.preventDefault();}// If target is not the <li> element (ie: a child), find the <li>.
if(!$target.is('li')){$target=$target.closest('li');}unevenOffset=_.slideCount%_.options.slidesToScroll!==0;indexOffset=unevenOffset?0:(_.slideCount-_.currentSlide)%_.options.slidesToScroll;switch(event.data.message){case'previous':slideOffset=indexOffset===0?_.options.slidesToScroll:_.options.slidesToShow-indexOffset;if(_.slideCount>_.options.slidesToShow){_.slideHandler(_.currentSlide-slideOffset,false,dontAnimate);}break;case'next':slideOffset=indexOffset===0?_.options.slidesToScroll:indexOffset;if(_.slideCount>_.options.slidesToShow){_.slideHandler(_.currentSlide+slideOffset,false,dontAnimate);}break;case'index':var index=event.data.index===0?0:event.data.index||$target.index()*_.options.slidesToScroll;_.slideHandler(_.checkNavigable(index),false,dontAnimate);$target.children().trigger('focus');break;default:return;}};Slick.prototype.checkNavigable=function(index){var _=this,navigables,prevNavigable;navigables=_.getNavigableIndexes();prevNavigable=0;if(index>navigables[navigables.length-1]){index=navigables[navigables.length-1];}else{for(var n in navigables){if(index<navigables[n]){index=prevNavigable;break;}prevNavigable=navigables[n];}}return index;};Slick.prototype.cleanUpEvents=function(){var _=this;if(_.options.dots&&_.$dots!==null){$('li',_.$dots).off('click.slick',_.changeSlide).off('mouseenter.slick',$.proxy(_.interrupt,_,true)).off('mouseleave.slick',$.proxy(_.interrupt,_,false));}_.$slider.off('focus.slick blur.slick');if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){_.$prevArrow&&_.$prevArrow.off('click.slick',_.changeSlide);_.$nextArrow&&_.$nextArrow.off('click.slick',_.changeSlide);}_.$list.off('touchstart.slick mousedown.slick',_.swipeHandler);_.$list.off('touchmove.slick mousemove.slick',_.swipeHandler);_.$list.off('touchend.slick mouseup.slick',_.swipeHandler);_.$list.off('touchcancel.slick mouseleave.slick',_.swipeHandler);_.$list.off('click.slick',_.clickHandler);$(document).off(_.visibilityChange,_.visibility);_.cleanUpSlideEvents();if(_.options.accessibility===true){_.$list.off('keydown.slick',_.keyHandler);}if(_.options.focusOnSelect===true){$(_.$slideTrack).children().off('click.slick',_.selectHandler);}$(window).off('orientationchange.slick.slick-'+_.instanceUid,_.orientationChange);$(window).off('resize.slick.slick-'+_.instanceUid,_.resize);$('[draggable!=true]',_.$slideTrack).off('dragstart',_.preventDefault);$(window).off('load.slick.slick-'+_.instanceUid,_.setPosition);$(document).off('ready.slick.slick-'+_.instanceUid,_.setPosition);};Slick.prototype.cleanUpSlideEvents=function(){var _=this;_.$list.off('mouseenter.slick',$.proxy(_.interrupt,_,true));_.$list.off('mouseleave.slick',$.proxy(_.interrupt,_,false));};Slick.prototype.cleanUpRows=function(){var _=this,originalSlides;if(_.options.rows>1){originalSlides=_.$slides.children().children();originalSlides.removeAttr('style');_.$slider.empty().append(originalSlides);}};Slick.prototype.clickHandler=function(event){var _=this;if(_.shouldClick===false){event.stopImmediatePropagation();event.stopPropagation();event.preventDefault();}};Slick.prototype.destroy=function(refresh){var _=this;_.autoPlayClear();_.touchObject={};_.cleanUpEvents();$('.slick-cloned',_.$slider).detach();if(_.$dots){_.$dots.remove();}if(_.$prevArrow&&_.$prevArrow.length){_.$prevArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display','');if(_.htmlExpr.test(_.options.prevArrow)){_.$prevArrow.remove();}}if(_.$nextArrow&&_.$nextArrow.length){_.$nextArrow.removeClass('slick-disabled slick-arrow slick-hidden').removeAttr('aria-hidden aria-disabled tabindex').css('display','');if(_.htmlExpr.test(_.options.nextArrow)){_.$nextArrow.remove();}}if(_.$slides){_.$slides.removeClass('slick-slide slick-active slick-center slick-visible slick-current').removeAttr('aria-hidden').removeAttr('data-slick-index').each(function(){$(this).attr('style',$(this).data('originalStyling'));});_.$slideTrack.children(this.options.slide).detach();_.$slideTrack.detach();_.$list.detach();_.$slider.append(_.$slides);}_.cleanUpRows();_.$slider.removeClass('slick-slider');_.$slider.removeClass('slick-initialized');_.$slider.removeClass('slick-dotted');_.unslicked=true;if(!refresh){_.$slider.trigger('destroy',[_]);}};Slick.prototype.disableTransition=function(slide){var _=this,transition={};transition[_.transitionType]='';if(_.options.fade===false){_.$slideTrack.css(transition);}else{_.$slides.eq(slide).css(transition);}};Slick.prototype.fadeSlide=function(slideIndex,callback){var _=this;if(_.cssTransitions===false){_.$slides.eq(slideIndex).css({zIndex:_.options.zIndex});_.$slides.eq(slideIndex).animate({opacity:1},_.options.speed,_.options.easing,callback);}else{_.applyTransition(slideIndex);_.$slides.eq(slideIndex).css({opacity:1,zIndex:_.options.zIndex});if(callback){setTimeout(function(){_.disableTransition(slideIndex);callback.call();},_.options.speed);}}};Slick.prototype.fadeSlideOut=function(slideIndex){var _=this;if(_.cssTransitions===false){_.$slides.eq(slideIndex).animate({opacity:0,zIndex:_.options.zIndex-2},_.options.speed,_.options.easing);}else{_.applyTransition(slideIndex);_.$slides.eq(slideIndex).css({opacity:0,zIndex:_.options.zIndex-2});}};Slick.prototype.filterSlides=Slick.prototype.slickFilter=function(filter){var _=this;if(filter!==null){_.$slidesCache=_.$slides;_.unload();_.$slideTrack.children(this.options.slide).detach();_.$slidesCache.filter(filter).appendTo(_.$slideTrack);_.reinit();}};Slick.prototype.focusHandler=function(){var _=this;_.$slider.off('focus.slick blur.slick').on('focus.slick blur.slick','*:not(.slick-arrow)',function(event){event.stopImmediatePropagation();var $sf=$(this);setTimeout(function(){if(_.options.pauseOnFocus){_.focussed=$sf.is(':focus');_.autoPlay();}},0);});};Slick.prototype.getCurrent=Slick.prototype.slickCurrentSlide=function(){var _=this;return _.currentSlide;};Slick.prototype.getDotCount=function(){var _=this;var breakPoint=0;var counter=0;var pagerQty=0;if(_.options.infinite===true){while(breakPoint<_.slideCount){++pagerQty;breakPoint=counter+_.options.slidesToScroll;counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;}}else if(_.options.centerMode===true){pagerQty=_.slideCount;}else if(!_.options.asNavFor){pagerQty=1+Math.ceil((_.slideCount-_.options.slidesToShow)/_.options.slidesToScroll);}else{while(breakPoint<_.slideCount){++pagerQty;breakPoint=counter+_.options.slidesToScroll;counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;}}return pagerQty-1;};Slick.prototype.getLeft=function(slideIndex){var _=this,targetLeft,verticalHeight,verticalOffset=0,targetSlide;_.slideOffset=0;verticalHeight=_.$slides.first().outerHeight(true);if(_.options.infinite===true){if(_.slideCount>_.options.slidesToShow){_.slideOffset=_.slideWidth*_.options.slidesToShow*-1;verticalOffset=verticalHeight*_.options.slidesToShow*-1;}if(_.slideCount%_.options.slidesToScroll!==0){if(slideIndex+_.options.slidesToScroll>_.slideCount&&_.slideCount>_.options.slidesToShow){if(slideIndex>_.slideCount){_.slideOffset=(_.options.slidesToShow-(slideIndex-_.slideCount))*_.slideWidth*-1;verticalOffset=(_.options.slidesToShow-(slideIndex-_.slideCount))*verticalHeight*-1;}else{_.slideOffset=_.slideCount%_.options.slidesToScroll*_.slideWidth*-1;verticalOffset=_.slideCount%_.options.slidesToScroll*verticalHeight*-1;}}}}else{if(slideIndex+_.options.slidesToShow>_.slideCount){_.slideOffset=(slideIndex+_.options.slidesToShow-_.slideCount)*_.slideWidth;verticalOffset=(slideIndex+_.options.slidesToShow-_.slideCount)*verticalHeight;}}if(_.slideCount<=_.options.slidesToShow){_.slideOffset=0;verticalOffset=0;}if(_.options.centerMode===true&&_.options.infinite===true){_.slideOffset+=_.slideWidth*Math.floor(_.options.slidesToShow/2)-_.slideWidth;}else if(_.options.centerMode===true){_.slideOffset=0;_.slideOffset+=_.slideWidth*Math.floor(_.options.slidesToShow/2);}if(_.options.vertical===false){targetLeft=slideIndex*_.slideWidth*-1+_.slideOffset;}else{targetLeft=slideIndex*verticalHeight*-1+verticalOffset;}if(_.options.variableWidth===true){if(_.slideCount<=_.options.slidesToShow||_.options.infinite===false){targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex);}else{targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex+_.options.slidesToShow);}if(_.options.rtl===true){if(targetSlide[0]){targetLeft=(_.$slideTrack.width()-targetSlide[0].offsetLeft-targetSlide.width())*-1;}else{targetLeft=0;}}else{targetLeft=targetSlide[0]?targetSlide[0].offsetLeft*-1:0;}if(_.options.centerMode===true){if(_.slideCount<=_.options.slidesToShow||_.options.infinite===false){targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex);}else{targetSlide=_.$slideTrack.children('.slick-slide').eq(slideIndex+_.options.slidesToShow+1);}if(_.options.rtl===true){if(targetSlide[0]){targetLeft=(_.$slideTrack.width()-targetSlide[0].offsetLeft-targetSlide.width())*-1;}else{targetLeft=0;}}else{targetLeft=targetSlide[0]?targetSlide[0].offsetLeft*-1:0;}targetLeft+=(_.$list.width()-targetSlide.outerWidth())/2;}}return targetLeft;};Slick.prototype.getOption=Slick.prototype.slickGetOption=function(option){var _=this;return _.options[option];};Slick.prototype.getNavigableIndexes=function(){var _=this,breakPoint=0,counter=0,indexes=[],max;if(_.options.infinite===false){max=_.slideCount;}else{breakPoint=_.options.slidesToScroll*-1;counter=_.options.slidesToScroll*-1;max=_.slideCount*2;}while(breakPoint<max){indexes.push(breakPoint);breakPoint=counter+_.options.slidesToScroll;counter+=_.options.slidesToScroll<=_.options.slidesToShow?_.options.slidesToScroll:_.options.slidesToShow;}return indexes;};Slick.prototype.getSlick=function(){return this;};Slick.prototype.getSlideCount=function(){var _=this,slidesTraversed,swipedSlide,centerOffset;centerOffset=_.options.centerMode===true?_.slideWidth*Math.floor(_.options.slidesToShow/2):0;if(_.options.swipeToSlide===true){_.$slideTrack.find('.slick-slide').each(function(index,slide){if(slide.offsetLeft-centerOffset+$(slide).outerWidth()/2>_.swipeLeft*-1){swipedSlide=slide;return false;}});slidesTraversed=Math.abs($(swipedSlide).attr('data-slick-index')-_.currentSlide)||1;return slidesTraversed;}else{return _.options.slidesToScroll;}};Slick.prototype.goTo=Slick.prototype.slickGoTo=function(slide,dontAnimate){var _=this;_.changeSlide({data:{message:'index',index:parseInt(slide)}},dontAnimate);};Slick.prototype.init=function(creation){var _=this;if(!$(_.$slider).hasClass('slick-initialized')){$(_.$slider).addClass('slick-initialized');_.buildRows();_.buildOut();_.setProps();_.startLoad();_.loadSlider();_.initializeEvents();_.updateArrows();_.updateDots();_.checkResponsive(true);_.focusHandler();}if(creation){_.$slider.trigger('init',[_]);}if(_.options.accessibility===true){_.initADA();}if(_.options.autoplay){_.paused=false;_.autoPlay();}};Slick.prototype.initADA=function(){var _=this;_.$slides.add(_.$slideTrack.find('.slick-cloned')).attr({'aria-hidden':'true','tabindex':'-1'}).find('a, input, button, select').attr({'tabindex':'-1'});_.$slideTrack.attr('role','listbox');_.$slides.not(_.$slideTrack.find('.slick-cloned')).each(function(i){$(this).attr({'role':'option','aria-describedby':'slick-slide'+_.instanceUid+i+''});});if(_.$dots!==null){_.$dots.attr('role','tablist').find('li').each(function(i){$(this).attr({'role':'presentation','aria-selected':'false','aria-controls':'navigation'+_.instanceUid+i+'','id':'slick-slide'+_.instanceUid+i+''});}).first().attr('aria-selected','true').end().find('button').attr('role','button').end().closest('div').attr('role','toolbar');}_.activateADA();};Slick.prototype.initArrowEvents=function(){var _=this;if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){_.$prevArrow.off('click.slick').on('click.slick',{message:'previous'},_.changeSlide);_.$nextArrow.off('click.slick').on('click.slick',{message:'next'},_.changeSlide);}};Slick.prototype.initDotEvents=function(){var _=this;if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){$('li',_.$dots).on('click.slick',{message:'index'},_.changeSlide);}if(_.options.dots===true&&_.options.pauseOnDotsHover===true){$('li',_.$dots).on('mouseenter.slick',$.proxy(_.interrupt,_,true)).on('mouseleave.slick',$.proxy(_.interrupt,_,false));}};Slick.prototype.initSlideEvents=function(){var _=this;if(_.options.pauseOnHover){_.$list.on('mouseenter.slick',$.proxy(_.interrupt,_,true));_.$list.on('mouseleave.slick',$.proxy(_.interrupt,_,false));}};Slick.prototype.initializeEvents=function(){var _=this;_.initArrowEvents();_.initDotEvents();_.initSlideEvents();_.$list.on('touchstart.slick mousedown.slick',{action:'start'},_.swipeHandler);_.$list.on('touchmove.slick mousemove.slick',{action:'move'},_.swipeHandler);_.$list.on('touchend.slick mouseup.slick',{action:'end'},_.swipeHandler);_.$list.on('touchcancel.slick mouseleave.slick',{action:'end'},_.swipeHandler);_.$list.on('click.slick',_.clickHandler);$(document).on(_.visibilityChange,$.proxy(_.visibility,_));if(_.options.accessibility===true){_.$list.on('keydown.slick',_.keyHandler);}if(_.options.focusOnSelect===true){$(_.$slideTrack).children().on('click.slick',_.selectHandler);}$(window).on('orientationchange.slick.slick-'+_.instanceUid,$.proxy(_.orientationChange,_));$(window).on('resize.slick.slick-'+_.instanceUid,$.proxy(_.resize,_));$('[draggable!=true]',_.$slideTrack).on('dragstart',_.preventDefault);$(window).on('load.slick.slick-'+_.instanceUid,_.setPosition);$(document).on('ready.slick.slick-'+_.instanceUid,_.setPosition);};Slick.prototype.initUI=function(){var _=this;if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){_.$prevArrow.show();_.$nextArrow.show();}if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){_.$dots.show();}};Slick.prototype.keyHandler=function(event){var _=this;//Dont slide if the cursor is inside the form fields and arrow keys are pressed
if(!event.target.tagName.match('TEXTAREA|INPUT|SELECT')){if(event.keyCode===37&&_.options.accessibility===true){_.changeSlide({data:{message:_.options.rtl===true?'next':'previous'}});}else if(event.keyCode===39&&_.options.accessibility===true){_.changeSlide({data:{message:_.options.rtl===true?'previous':'next'}});}}};Slick.prototype.lazyLoad=function(){var _=this,loadRange,cloneRange,rangeStart,rangeEnd;function loadImages(imagesScope){$('img[data-lazy]',imagesScope).each(function(){var image=$(this),imageSource=$(this).attr('data-lazy'),imageToLoad=document.createElement('img');imageToLoad.onload=function(){image.animate({opacity:0},100,function(){image.attr('src',imageSource).animate({opacity:1},200,function(){image.removeAttr('data-lazy').removeClass('slick-loading');});_.$slider.trigger('lazyLoaded',[_,image,imageSource]);});};imageToLoad.onerror=function(){image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');_.$slider.trigger('lazyLoadError',[_,image,imageSource]);};imageToLoad.src=imageSource;});}if(_.options.centerMode===true){if(_.options.infinite===true){rangeStart=_.currentSlide+(_.options.slidesToShow/2+1);rangeEnd=rangeStart+_.options.slidesToShow+2;}else{rangeStart=Math.max(0,_.currentSlide-(_.options.slidesToShow/2+1));rangeEnd=2+(_.options.slidesToShow/2+1)+_.currentSlide;}}else{rangeStart=_.options.infinite?_.options.slidesToShow+_.currentSlide:_.currentSlide;rangeEnd=Math.ceil(rangeStart+_.options.slidesToShow);if(_.options.fade===true){if(rangeStart>0)rangeStart--;if(rangeEnd<=_.slideCount)rangeEnd++;}}loadRange=_.$slider.find('.slick-slide').slice(rangeStart,rangeEnd);loadImages(loadRange);if(_.slideCount<=_.options.slidesToShow){cloneRange=_.$slider.find('.slick-slide');loadImages(cloneRange);}else if(_.currentSlide>=_.slideCount-_.options.slidesToShow){cloneRange=_.$slider.find('.slick-cloned').slice(0,_.options.slidesToShow);loadImages(cloneRange);}else if(_.currentSlide===0){cloneRange=_.$slider.find('.slick-cloned').slice(_.options.slidesToShow*-1);loadImages(cloneRange);}};Slick.prototype.loadSlider=function(){var _=this;_.setPosition();_.$slideTrack.css({opacity:1});_.$slider.removeClass('slick-loading');_.initUI();if(_.options.lazyLoad==='progressive'){_.progressiveLazyLoad();}};Slick.prototype.next=Slick.prototype.slickNext=function(){var _=this;_.changeSlide({data:{message:'next'}});};Slick.prototype.orientationChange=function(){var _=this;_.checkResponsive();_.setPosition();};Slick.prototype.pause=Slick.prototype.slickPause=function(){var _=this;_.autoPlayClear();_.paused=true;};Slick.prototype.play=Slick.prototype.slickPlay=function(){var _=this;_.autoPlay();_.options.autoplay=true;_.paused=false;_.focussed=false;_.interrupted=false;};Slick.prototype.postSlide=function(index){var _=this;if(!_.unslicked){_.$slider.trigger('afterChange',[_,index]);_.animating=false;_.setPosition();_.swipeLeft=null;if(_.options.autoplay){_.autoPlay();}if(_.options.accessibility===true){_.initADA();}}};Slick.prototype.prev=Slick.prototype.slickPrev=function(){var _=this;_.changeSlide({data:{message:'previous'}});};Slick.prototype.preventDefault=function(event){event.preventDefault();};Slick.prototype.progressiveLazyLoad=function(tryCount){tryCount=tryCount||1;var _=this,$imgsToLoad=$('img[data-lazy]',_.$slider),image,imageSource,imageToLoad;if($imgsToLoad.length){image=$imgsToLoad.first();imageSource=image.attr('data-lazy');imageToLoad=document.createElement('img');imageToLoad.onload=function(){image.attr('src',imageSource).removeAttr('data-lazy').removeClass('slick-loading');if(_.options.adaptiveHeight===true){_.setPosition();}_.$slider.trigger('lazyLoaded',[_,image,imageSource]);_.progressiveLazyLoad();};imageToLoad.onerror=function(){if(tryCount<3){/**
                     * try to load the image 3 times,
                     * leave a slight delay so we don't get
                     * servers blocking the request.
                     */setTimeout(function(){_.progressiveLazyLoad(tryCount+1);},500);}else{image.removeAttr('data-lazy').removeClass('slick-loading').addClass('slick-lazyload-error');_.$slider.trigger('lazyLoadError',[_,image,imageSource]);_.progressiveLazyLoad();}};imageToLoad.src=imageSource;}else{_.$slider.trigger('allImagesLoaded',[_]);}};Slick.prototype.refresh=function(initializing){var _=this,currentSlide,lastVisibleIndex;lastVisibleIndex=_.slideCount-_.options.slidesToShow;// in non-infinite sliders, we don't want to go past the
// last visible index.
if(!_.options.infinite&&_.currentSlide>lastVisibleIndex){_.currentSlide=lastVisibleIndex;}// if less slides than to show, go to start.
if(_.slideCount<=_.options.slidesToShow){_.currentSlide=0;}currentSlide=_.currentSlide;_.destroy(true);$.extend(_,_.initials,{currentSlide:currentSlide});_.init();if(!initializing){_.changeSlide({data:{message:'index',index:currentSlide}},false);}};Slick.prototype.registerBreakpoints=function(){var _=this,breakpoint,currentBreakpoint,l,responsiveSettings=_.options.responsive||null;if($.type(responsiveSettings)==='array'&&responsiveSettings.length){_.respondTo=_.options.respondTo||'window';for(breakpoint in responsiveSettings){l=_.breakpoints.length-1;currentBreakpoint=responsiveSettings[breakpoint].breakpoint;if(responsiveSettings.hasOwnProperty(breakpoint)){// loop through the breakpoints and cut out any existing
// ones with the same breakpoint number, we don't want dupes.
while(l>=0){if(_.breakpoints[l]&&_.breakpoints[l]===currentBreakpoint){_.breakpoints.splice(l,1);}l--;}_.breakpoints.push(currentBreakpoint);_.breakpointSettings[currentBreakpoint]=responsiveSettings[breakpoint].settings;}}_.breakpoints.sort(function(a,b){return _.options.mobileFirst?a-b:b-a;});}};Slick.prototype.reinit=function(){var _=this;_.$slides=_.$slideTrack.children(_.options.slide).addClass('slick-slide');_.slideCount=_.$slides.length;if(_.currentSlide>=_.slideCount&&_.currentSlide!==0){_.currentSlide=_.currentSlide-_.options.slidesToScroll;}if(_.slideCount<=_.options.slidesToShow){_.currentSlide=0;}_.registerBreakpoints();_.setProps();_.setupInfinite();_.buildArrows();_.updateArrows();_.initArrowEvents();_.buildDots();_.updateDots();_.initDotEvents();_.cleanUpSlideEvents();_.initSlideEvents();_.checkResponsive(false,true);if(_.options.focusOnSelect===true){$(_.$slideTrack).children().on('click.slick',_.selectHandler);}_.setSlideClasses(typeof _.currentSlide==='number'?_.currentSlide:0);_.setPosition();_.focusHandler();_.paused=!_.options.autoplay;_.autoPlay();_.$slider.trigger('reInit',[_]);};Slick.prototype.resize=function(){var _=this;if($(window).width()!==_.windowWidth){clearTimeout(_.windowDelay);_.windowDelay=window.setTimeout(function(){_.windowWidth=$(window).width();_.checkResponsive();if(!_.unslicked){_.setPosition();}},50);}};Slick.prototype.removeSlide=Slick.prototype.slickRemove=function(index,removeBefore,removeAll){var _=this;if(typeof index==='boolean'){removeBefore=index;index=removeBefore===true?0:_.slideCount-1;}else{index=removeBefore===true?--index:index;}if(_.slideCount<1||index<0||index>_.slideCount-1){return false;}_.unload();if(removeAll===true){_.$slideTrack.children().remove();}else{_.$slideTrack.children(this.options.slide).eq(index).remove();}_.$slides=_.$slideTrack.children(this.options.slide);_.$slideTrack.children(this.options.slide).detach();_.$slideTrack.append(_.$slides);_.$slidesCache=_.$slides;_.reinit();};Slick.prototype.setCSS=function(position){var _=this,positionProps={},x,y;if(_.options.rtl===true){position=-position;}x=_.positionProp=='left'?Math.ceil(position)+'px':'0px';y=_.positionProp=='top'?Math.ceil(position)+'px':'0px';positionProps[_.positionProp]=position;if(_.transformsEnabled===false){_.$slideTrack.css(positionProps);}else{positionProps={};if(_.cssTransitions===false){positionProps[_.animType]='translate('+x+', '+y+')';_.$slideTrack.css(positionProps);}else{positionProps[_.animType]='translate3d('+x+', '+y+', 0px)';_.$slideTrack.css(positionProps);}}};Slick.prototype.setDimensions=function(){var _=this;if(_.options.vertical===false){if(_.options.centerMode===true){_.$list.css({padding:'0px '+_.options.centerPadding});}}else{_.$list.height(_.$slides.first().outerHeight(true)*_.options.slidesToShow);if(_.options.centerMode===true){_.$list.css({padding:_.options.centerPadding+' 0px'});}}_.listWidth=_.$list.width();_.listHeight=_.$list.height();if(_.options.vertical===false&&_.options.variableWidth===false){_.slideWidth=Math.ceil(_.listWidth/_.options.slidesToShow);_.$slideTrack.width(Math.ceil(_.slideWidth*_.$slideTrack.children('.slick-slide').length));}else if(_.options.variableWidth===true){_.$slideTrack.width(5000*_.slideCount);}else{_.slideWidth=Math.ceil(_.listWidth);_.$slideTrack.height(Math.ceil(_.$slides.first().outerHeight(true)*_.$slideTrack.children('.slick-slide').length));}var offset=_.$slides.first().outerWidth(true)-_.$slides.first().width();if(_.options.variableWidth===false)_.$slideTrack.children('.slick-slide').width(_.slideWidth-offset);};Slick.prototype.setFade=function(){var _=this,targetLeft;_.$slides.each(function(index,element){targetLeft=_.slideWidth*index*-1;if(_.options.rtl===true){$(element).css({position:'relative',right:targetLeft,top:0,zIndex:_.options.zIndex-2,opacity:0});}else{$(element).css({position:'relative',left:targetLeft,top:0,zIndex:_.options.zIndex-2,opacity:0});}});_.$slides.eq(_.currentSlide).css({zIndex:_.options.zIndex-1,opacity:1});};Slick.prototype.setHeight=function(){var _=this;if(_.options.slidesToShow===1&&_.options.adaptiveHeight===true&&_.options.vertical===false){var targetHeight=_.$slides.eq(_.currentSlide).outerHeight(true);_.$list.css('height',targetHeight);}};Slick.prototype.setOption=Slick.prototype.slickSetOption=function(){/**
         * accepts arguments in format of:
         *
         *  - for changing a single option's value:
         *     .slick("setOption", option, value, refresh )
         *
         *  - for changing a set of responsive options:
         *     .slick("setOption", 'responsive', [{}, ...], refresh )
         *
         *  - for updating multiple values at once (not responsive)
         *     .slick("setOption", { 'option': value, ... }, refresh )
         */var _=this,l,item,option,value,refresh=false,type;if($.type(arguments[0])==='object'){option=arguments[0];refresh=arguments[1];type='multiple';}else if($.type(arguments[0])==='string'){option=arguments[0];value=arguments[1];refresh=arguments[2];if(arguments[0]==='responsive'&&$.type(arguments[1])==='array'){type='responsive';}else if(typeof arguments[1]!=='undefined'){type='single';}}if(type==='single'){_.options[option]=value;}else if(type==='multiple'){$.each(option,function(opt,val){_.options[opt]=val;});}else if(type==='responsive'){for(item in value){if($.type(_.options.responsive)!=='array'){_.options.responsive=[value[item]];}else{l=_.options.responsive.length-1;// loop through the responsive object and splice out duplicates.
while(l>=0){if(_.options.responsive[l].breakpoint===value[item].breakpoint){_.options.responsive.splice(l,1);}l--;}_.options.responsive.push(value[item]);}}}if(refresh){_.unload();_.reinit();}};Slick.prototype.setPosition=function(){var _=this;_.setDimensions();_.setHeight();if(_.options.fade===false){_.setCSS(_.getLeft(_.currentSlide));}else{_.setFade();}_.$slider.trigger('setPosition',[_]);};Slick.prototype.setProps=function(){var _=this,bodyStyle=document.body.style;_.positionProp=_.options.vertical===true?'top':'left';if(_.positionProp==='top'){_.$slider.addClass('slick-vertical');}else{_.$slider.removeClass('slick-vertical');}if(bodyStyle.WebkitTransition!==undefined||bodyStyle.MozTransition!==undefined||bodyStyle.msTransition!==undefined){if(_.options.useCSS===true){_.cssTransitions=true;}}if(_.options.fade){if(typeof _.options.zIndex==='number'){if(_.options.zIndex<3){_.options.zIndex=3;}}else{_.options.zIndex=_.defaults.zIndex;}}if(bodyStyle.OTransform!==undefined){_.animType='OTransform';_.transformType='-o-transform';_.transitionType='OTransition';if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.webkitPerspective===undefined)_.animType=false;}if(bodyStyle.MozTransform!==undefined){_.animType='MozTransform';_.transformType='-moz-transform';_.transitionType='MozTransition';if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.MozPerspective===undefined)_.animType=false;}if(bodyStyle.webkitTransform!==undefined){_.animType='webkitTransform';_.transformType='-webkit-transform';_.transitionType='webkitTransition';if(bodyStyle.perspectiveProperty===undefined&&bodyStyle.webkitPerspective===undefined)_.animType=false;}if(bodyStyle.msTransform!==undefined){_.animType='msTransform';_.transformType='-ms-transform';_.transitionType='msTransition';if(bodyStyle.msTransform===undefined)_.animType=false;}if(bodyStyle.transform!==undefined&&_.animType!==false){_.animType='transform';_.transformType='transform';_.transitionType='transition';}_.transformsEnabled=_.options.useTransform&&_.animType!==null&&_.animType!==false;};Slick.prototype.setSlideClasses=function(index){var _=this,centerOffset,allSlides,indexOffset,remainder;allSlides=_.$slider.find('.slick-slide').removeClass('slick-active slick-center slick-current').attr('aria-hidden','true');_.$slides.eq(index).addClass('slick-current');if(_.options.centerMode===true){centerOffset=Math.floor(_.options.slidesToShow/2);if(_.options.infinite===true){if(index>=centerOffset&&index<=_.slideCount-1-centerOffset){_.$slides.slice(index-centerOffset,index+centerOffset+1).addClass('slick-active').attr('aria-hidden','false');}else{indexOffset=_.options.slidesToShow+index;allSlides.slice(indexOffset-centerOffset+1,indexOffset+centerOffset+2).addClass('slick-active').attr('aria-hidden','false');}if(index===0){allSlides.eq(allSlides.length-1-_.options.slidesToShow).addClass('slick-center');}else if(index===_.slideCount-1){allSlides.eq(_.options.slidesToShow).addClass('slick-center');}}_.$slides.eq(index).addClass('slick-center');}else{if(index>=0&&index<=_.slideCount-_.options.slidesToShow){_.$slides.slice(index,index+_.options.slidesToShow).addClass('slick-active').attr('aria-hidden','false');}else if(allSlides.length<=_.options.slidesToShow){allSlides.addClass('slick-active').attr('aria-hidden','false');}else{remainder=_.slideCount%_.options.slidesToShow;indexOffset=_.options.infinite===true?_.options.slidesToShow+index:index;if(_.options.slidesToShow==_.options.slidesToScroll&&_.slideCount-index<_.options.slidesToShow){allSlides.slice(indexOffset-(_.options.slidesToShow-remainder),indexOffset+remainder).addClass('slick-active').attr('aria-hidden','false');}else{allSlides.slice(indexOffset,indexOffset+_.options.slidesToShow).addClass('slick-active').attr('aria-hidden','false');}}}if(_.options.lazyLoad==='ondemand'){_.lazyLoad();}};Slick.prototype.setupInfinite=function(){var _=this,i,slideIndex,infiniteCount;if(_.options.fade===true){_.options.centerMode=false;}if(_.options.infinite===true&&_.options.fade===false){slideIndex=null;if(_.slideCount>_.options.slidesToShow){if(_.options.centerMode===true){infiniteCount=_.options.slidesToShow+1;}else{infiniteCount=_.options.slidesToShow;}for(i=_.slideCount;i>_.slideCount-infiniteCount;i-=1){slideIndex=i-1;$(_.$slides[slideIndex]).clone(true).attr('id','').attr('data-slick-index',slideIndex-_.slideCount).prependTo(_.$slideTrack).addClass('slick-cloned');}for(i=0;i<infiniteCount;i+=1){slideIndex=i;$(_.$slides[slideIndex]).clone(true).attr('id','').attr('data-slick-index',slideIndex+_.slideCount).appendTo(_.$slideTrack).addClass('slick-cloned');}_.$slideTrack.find('.slick-cloned').find('[id]').each(function(){$(this).attr('id','');});}}};Slick.prototype.interrupt=function(toggle){var _=this;if(!toggle){_.autoPlay();}_.interrupted=toggle;};Slick.prototype.selectHandler=function(event){var _=this;var targetElement=$(event.target).is('.slick-slide')?$(event.target):$(event.target).parents('.slick-slide');var index=parseInt(targetElement.attr('data-slick-index'));if(!index)index=0;if(_.slideCount<=_.options.slidesToShow){_.setSlideClasses(index);_.asNavFor(index);return;}_.slideHandler(index);};Slick.prototype.slideHandler=function(index,sync,dontAnimate){var targetSlide,animSlide,oldSlide,slideLeft,targetLeft=null,_=this,navTarget;sync=sync||false;if(_.animating===true&&_.options.waitForAnimate===true){return;}if(_.options.fade===true&&_.currentSlide===index){return;}if(_.slideCount<=_.options.slidesToShow){return;}if(sync===false){_.asNavFor(index);}targetSlide=index;targetLeft=_.getLeft(targetSlide);slideLeft=_.getLeft(_.currentSlide);_.currentLeft=_.swipeLeft===null?slideLeft:_.swipeLeft;if(_.options.infinite===false&&_.options.centerMode===false&&(index<0||index>_.getDotCount()*_.options.slidesToScroll)){if(_.options.fade===false){targetSlide=_.currentSlide;if(dontAnimate!==true){_.animateSlide(slideLeft,function(){_.postSlide(targetSlide);});}else{_.postSlide(targetSlide);}}return;}else if(_.options.infinite===false&&_.options.centerMode===true&&(index<0||index>_.slideCount-_.options.slidesToScroll)){if(_.options.fade===false){targetSlide=_.currentSlide;if(dontAnimate!==true){_.animateSlide(slideLeft,function(){_.postSlide(targetSlide);});}else{_.postSlide(targetSlide);}}return;}if(_.options.autoplay){clearInterval(_.autoPlayTimer);}if(targetSlide<0){if(_.slideCount%_.options.slidesToScroll!==0){animSlide=_.slideCount-_.slideCount%_.options.slidesToScroll;}else{animSlide=_.slideCount+targetSlide;}}else if(targetSlide>=_.slideCount){if(_.slideCount%_.options.slidesToScroll!==0){animSlide=0;}else{animSlide=targetSlide-_.slideCount;}}else{animSlide=targetSlide;}_.animating=true;_.$slider.trigger('beforeChange',[_,_.currentSlide,animSlide]);oldSlide=_.currentSlide;_.currentSlide=animSlide;_.setSlideClasses(_.currentSlide);if(_.options.asNavFor){navTarget=_.getNavTarget();navTarget=navTarget.slick('getSlick');if(navTarget.slideCount<=navTarget.options.slidesToShow){navTarget.setSlideClasses(_.currentSlide);}}_.updateDots();_.updateArrows();if(_.options.fade===true){if(dontAnimate!==true){_.fadeSlideOut(oldSlide);_.fadeSlide(animSlide,function(){_.postSlide(animSlide);});}else{_.postSlide(animSlide);}_.animateHeight();return;}if(dontAnimate!==true){_.animateSlide(targetLeft,function(){_.postSlide(animSlide);});}else{_.postSlide(animSlide);}};Slick.prototype.startLoad=function(){var _=this;if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow){_.$prevArrow.hide();_.$nextArrow.hide();}if(_.options.dots===true&&_.slideCount>_.options.slidesToShow){_.$dots.hide();}_.$slider.addClass('slick-loading');};Slick.prototype.swipeDirection=function(){var xDist,yDist,r,swipeAngle,_=this;xDist=_.touchObject.startX-_.touchObject.curX;yDist=_.touchObject.startY-_.touchObject.curY;r=Math.atan2(yDist,xDist);swipeAngle=Math.round(r*180/Math.PI);if(swipeAngle<0){swipeAngle=360-Math.abs(swipeAngle);}if(swipeAngle<=45&&swipeAngle>=0){return _.options.rtl===false?'left':'right';}if(swipeAngle<=360&&swipeAngle>=315){return _.options.rtl===false?'left':'right';}if(swipeAngle>=135&&swipeAngle<=225){return _.options.rtl===false?'right':'left';}if(_.options.verticalSwiping===true){if(swipeAngle>=35&&swipeAngle<=135){return'down';}else{return'up';}}return'vertical';};Slick.prototype.swipeEnd=function(event){var _=this,slideCount,direction;_.dragging=false;_.interrupted=false;_.shouldClick=_.touchObject.swipeLength>10?false:true;if(_.touchObject.curX===undefined){return false;}if(_.touchObject.edgeHit===true){_.$slider.trigger('edge',[_,_.swipeDirection()]);}if(_.touchObject.swipeLength>=_.touchObject.minSwipe){direction=_.swipeDirection();switch(direction){case'left':case'down':slideCount=_.options.swipeToSlide?_.checkNavigable(_.currentSlide+_.getSlideCount()):_.currentSlide+_.getSlideCount();_.currentDirection=0;break;case'right':case'up':slideCount=_.options.swipeToSlide?_.checkNavigable(_.currentSlide-_.getSlideCount()):_.currentSlide-_.getSlideCount();_.currentDirection=1;break;default:}if(direction!='vertical'){_.slideHandler(slideCount);_.touchObject={};_.$slider.trigger('swipe',[_,direction]);}}else{if(_.touchObject.startX!==_.touchObject.curX){_.slideHandler(_.currentSlide);_.touchObject={};}}};Slick.prototype.swipeHandler=function(event){var _=this;if(_.options.swipe===false||'ontouchend'in document&&_.options.swipe===false){return;}else if(_.options.draggable===false&&event.type.indexOf('mouse')!==-1){return;}_.touchObject.fingerCount=event.originalEvent&&event.originalEvent.touches!==undefined?event.originalEvent.touches.length:1;_.touchObject.minSwipe=_.listWidth/_.options.touchThreshold;if(_.options.verticalSwiping===true){_.touchObject.minSwipe=_.listHeight/_.options.touchThreshold;}switch(event.data.action){case'start':_.swipeStart(event);break;case'move':_.swipeMove(event);break;case'end':_.swipeEnd(event);break;}};Slick.prototype.swipeMove=function(event){var _=this,edgeWasHit=false,curLeft,swipeDirection,swipeLength,positionOffset,touches;touches=event.originalEvent!==undefined?event.originalEvent.touches:null;if(!_.dragging||touches&&touches.length!==1){return false;}curLeft=_.getLeft(_.currentSlide);_.touchObject.curX=touches!==undefined?touches[0].pageX:event.clientX;_.touchObject.curY=touches!==undefined?touches[0].pageY:event.clientY;_.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(_.touchObject.curX-_.touchObject.startX,2)));if(_.options.verticalSwiping===true){_.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(_.touchObject.curY-_.touchObject.startY,2)));}swipeDirection=_.swipeDirection();if(swipeDirection==='vertical'){return;}if(event.originalEvent!==undefined&&_.touchObject.swipeLength>4){event.preventDefault();}positionOffset=(_.options.rtl===false?1:-1)*(_.touchObject.curX>_.touchObject.startX?1:-1);if(_.options.verticalSwiping===true){positionOffset=_.touchObject.curY>_.touchObject.startY?1:-1;}swipeLength=_.touchObject.swipeLength;_.touchObject.edgeHit=false;if(_.options.infinite===false){if(_.currentSlide===0&&swipeDirection==='right'||_.currentSlide>=_.getDotCount()&&swipeDirection==='left'){swipeLength=_.touchObject.swipeLength*_.options.edgeFriction;_.touchObject.edgeHit=true;}}if(_.options.vertical===false){_.swipeLeft=curLeft+swipeLength*positionOffset;}else{_.swipeLeft=curLeft+swipeLength*(_.$list.height()/_.listWidth)*positionOffset;}if(_.options.verticalSwiping===true){_.swipeLeft=curLeft+swipeLength*positionOffset;}if(_.options.fade===true||_.options.touchMove===false){return false;}if(_.animating===true){_.swipeLeft=null;return false;}_.setCSS(_.swipeLeft);};Slick.prototype.swipeStart=function(event){var _=this,touches;_.interrupted=true;if(_.touchObject.fingerCount!==1||_.slideCount<=_.options.slidesToShow){_.touchObject={};return false;}if(event.originalEvent!==undefined&&event.originalEvent.touches!==undefined){touches=event.originalEvent.touches[0];}_.touchObject.startX=_.touchObject.curX=touches!==undefined?touches.pageX:event.clientX;_.touchObject.startY=_.touchObject.curY=touches!==undefined?touches.pageY:event.clientY;_.dragging=true;};Slick.prototype.unfilterSlides=Slick.prototype.slickUnfilter=function(){var _=this;if(_.$slidesCache!==null){_.unload();_.$slideTrack.children(this.options.slide).detach();_.$slidesCache.appendTo(_.$slideTrack);_.reinit();}};Slick.prototype.unload=function(){var _=this;$('.slick-cloned',_.$slider).remove();if(_.$dots){_.$dots.remove();}if(_.$prevArrow&&_.htmlExpr.test(_.options.prevArrow)){_.$prevArrow.remove();}if(_.$nextArrow&&_.htmlExpr.test(_.options.nextArrow)){_.$nextArrow.remove();}_.$slides.removeClass('slick-slide slick-active slick-visible slick-current').attr('aria-hidden','true').css('width','');};Slick.prototype.unslick=function(fromBreakpoint){var _=this;_.$slider.trigger('unslick',[_,fromBreakpoint]);_.destroy();};Slick.prototype.updateArrows=function(){var _=this,centerOffset;centerOffset=Math.floor(_.options.slidesToShow/2);if(_.options.arrows===true&&_.slideCount>_.options.slidesToShow&&!_.options.infinite){_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled','false');if(_.currentSlide===0){_.$prevArrow.addClass('slick-disabled').attr('aria-disabled','true');_.$nextArrow.removeClass('slick-disabled').attr('aria-disabled','false');}else if(_.currentSlide>=_.slideCount-_.options.slidesToShow&&_.options.centerMode===false){_.$nextArrow.addClass('slick-disabled').attr('aria-disabled','true');_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');}else if(_.currentSlide>=_.slideCount-1&&_.options.centerMode===true){_.$nextArrow.addClass('slick-disabled').attr('aria-disabled','true');_.$prevArrow.removeClass('slick-disabled').attr('aria-disabled','false');}}};Slick.prototype.updateDots=function(){var _=this;if(_.$dots!==null){_.$dots.find('li').removeClass('slick-active').attr('aria-hidden','true');_.$dots.find('li').eq(Math.floor(_.currentSlide/_.options.slidesToScroll)).addClass('slick-active').attr('aria-hidden','false');}};Slick.prototype.visibility=function(){var _=this;if(_.options.autoplay){if(document[_.hidden]){_.interrupted=true;}else{_.interrupted=false;}}};$.fn.slick=function(){var _=this,opt=arguments[0],args=Array.prototype.slice.call(arguments,1),l=_.length,i,ret;for(i=0;i<l;i++){if((typeof opt==="undefined"?"undefined":_typeof(opt))=='object'||typeof opt=='undefined')_[i].slick=new Slick(_[i],opt);else ret=_[i].slick[opt].apply(_[i].slick,args);if(typeof ret!='undefined')return ret;}return _;};});$('#slick-reporting').slick({centerMode:true,centerPadding:'60px',slidesToShow:3,responsive:[{breakpoint:768,settings:{arrows:false,centerMode:true,centerPadding:'40px',slidesToShow:1}},{breakpoint:400,settings:{arrows:false,centerMode:true,centerPadding:'40px',slidesToShow:1}}]});$('.list .item').on('click',function(){$(this).addClass('active');var chosenVideoURL=$(this).attr('data-video');console.log(chosenVideoURL);$('#frame').attr('src',chosenVideoURL);if($('#frame').attr('src')===chosenVideoURL){}});

//# sourceMappingURL=data:application/json;base64,